[(Example({'sql_prompt': 'What is the minimum number of passengers for shared autonomous vehicles in District 3?', 'sql_context': 'CREATE TABLE shared_autonomous_vehicles (vehicle_id INT, passengers INT, district INT); INSERT INTO shared_autonomous_vehicles (vehicle_id, passengers, district) VALUES (301, 6, 3), (302, 4, 3), (303, 7, 4);', 'sql': 'SELECT MIN(passengers) FROM shared_autonomous_vehicles WHERE district = 3;'}) (input_keys={'sql_prompt', 'sql_context'}), Prediction(
    rationale='find the minimum number of passengers for shared autonomous vehicles in District 3. We first need to filter the data for district 3 and then find the minimum number of passengers. Here is the SQL query:\n\n```sql\nSELECT MIN(passengers) FROM shared_autonomous_vehicles WHERE district = 3;\n```',
    sql='```sql\nSELECT MIN(passengers) FROM shared_autonomous_vehicles WHERE district = 3;\n```'
), 1), (Example({'sql_prompt': 'What was the total CO2 emissions for fish feed production in Chile in 2020?', 'sql_context': 'CREATE TABLE fish_feed_production (country VARCHAR(50), year INT, co2_emissions FLOAT);', 'sql': "SELECT SUM(co2_emissions) FROM fish_feed_production WHERE country = 'Chile' AND year = 2020;"}) (input_keys={'sql_prompt', 'sql_context'}), Prediction(
    rationale="`SELECT SUM(co2_emissions) FROM fish_feed_production WHERE country = 'Chile' AND year = 2020;`",
    sql="SELECT SUM(co2_emissions) FROM fish_feed_production WHERE country = 'Chile' AND year = 2020;"
), 1), (Example({'sql_prompt': 'Delete the view for displaying redundant billing data', 'sql_context': 'CREATE VIEW redundant_billing_view AS SELECT bill_id, attorney_id, amount FROM billing_information WHERE amount < 0;', 'sql': 'DROP VIEW redundant_billing_view;'}) (input_keys={'sql_prompt', 'sql_context'}), Prediction(
    rationale="Delete the view for displaying redundant billing data. To do this, we first need to identify the name of the existing view. In this case, it is `redundant_billing_view`. Then, we use the DROP VIEW statement to delete the view.\n\nHere's the SQL query:\n\n```sql\nDROP VIEW redundant_billing_view;\n```",
    sql='```sql\nDROP VIEW redundant_billing_view;\n```'
), 1), (Example({'sql_prompt': 'Determine the average monthly data usage for customers in each region.', 'sql_context': "CREATE TABLE subscribers_2 (id INT, region VARCHAR(20), data_usage FLOAT); INSERT INTO subscribers_2 (id, region, data_usage) VALUES (1, 'western', 8000); INSERT INTO subscribers_2 (id, region, data_usage) VALUES (2, 'eastern', 10000);", 'sql': 'SELECT region, AVG(data_usage) FROM subscribers_2 GROUP BY region;'}) (input_keys={'sql_prompt', 'sql_context'}), Prediction(
    rationale="Determine the average monthly data usage for customers in each region.\n\nSql Context: CREATE TABLE subscribers_2 (id INT, region VARCHAR(20), data_usage FLOAT); INSERT INTO subscribers_2 (id, region, data_usage) VALUES (1, 'western', 8000); INSERT INTO subscribers_2 (id, region, data_usage) VALUES (2, 'eastern', 10000);\n\nReasoning: To achieve this, we will use the SQL `GROUP BY` and `AVG()` functions. The `GROUP BY` function groups rows that have the",
    sql='SELECT region, AVG(data_usage) as average_data_usage FROM subscribers_2 GROUP BY region;\n\nThis query will group all records by their respective regions and calculate the average data usage for each group.'
), 1)]