[(Example({'sql_prompt': "What are the top 3 autonomous vehicles with the highest safety ratings in the 'auto_show' table?", 'sql_context': 'CREATE TABLE auto_show (id INT, vehicle_name VARCHAR(50), safety_rating INT);', 'sql': "SELECT vehicle_name, safety_rating FROM (SELECT vehicle_name, safety_rating, ROW_NUMBER() OVER (ORDER BY safety_rating DESC) as safety_rank FROM auto_show WHERE vehicle_name LIKE '%Autonomous%') AS auton_ranks WHERE safety_rank <= 3;"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here is the completed output:\n\n---\n\nSql Prompt: What are the top 3 autonomous vehicles with the highest safety ratings in the 'auto_show' table?\n\nSql Context: CREATE TABLE auto_show (id INT, vehicle_name VARCHAR(50), safety_rating INT);\n\nReasoning: Let's think step by step in order to get the top 3 autonomous vehicles with the highest safety ratings. We need to first sort the vehicles by their safety ratings in descending order, then limit the result to the top 3.",
    sql='SELECT * FROM auto_show ORDER BY safety_rating DESC LIMIT 3;'
), 0), (Example({'sql_prompt': 'Delete a record from the broadband_usage table', 'sql_context': 'CREATE TABLE broadband_usage (usage_id INT, subscriber_id INT, usage_start_time TIMESTAMP, usage_end_time TIMESTAMP, data_used DECIMAL(10,2));', 'sql': 'DELETE FROM broadband_usage WHERE usage_id = 11111;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Delete a record from the broadband_usage table.\n\nWe need to specify which record we want to delete. Let's assume we have the usage_id of the record we want to delete.",
    sql='DELETE FROM broadband_usage WHERE usage_id = ?;'
), 0), (Example({'sql_prompt': 'How many recycling plants in Canada process exactly 5 types of waste?', 'sql_context': "CREATE TABLE recycling_plants (name TEXT, country TEXT, waste_types INTEGER); INSERT INTO recycling_plants (name, country, waste_types) VALUES ('Recycling Plant 1', 'Canada', 6), ('Recycling Plant 2', 'Canada', 4), ('Recycling Plant 3', 'Canada', 5), ('Recycling Plant 4', 'Canada', 5), ('Recycling Plant 5', 'Canada', 3);", 'sql': "SELECT COUNT(*) FROM recycling_plants WHERE country = 'Canada' AND waste_types = 5;"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the answers:\n\n---\n\nSql Prompt: What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type?\nSql Context: CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);",
    sql='SELECT reduction_type, AVG(co2_reduction) FROM GreenBuildingProjects GROUP BY reduction_type;\n\n---\n\nSql Prompt: How many marine species are affected by ocean acidification?\nSql Context: CREATE TABLE'
), 0), (Example({'sql_prompt': 'What is the total revenue for each game in the "Gaming" category?', 'sql_context': 'CREATE TABLE Games (GameID int, GameName varchar(50), Category varchar(50), Revenue decimal(10,2));', 'sql': 'SELECT Category, SUM(Revenue) OVER(PARTITION BY Category) as TotalRevenue FROM Games;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale='Here are the completed fields:\n\n---\n\nSql Prompt: What is the total revenue for each game in the "Gaming" category?\n\nSql Context: CREATE TABLE Games (GameID int, GameName varchar(50), Category varchar(50), Revenue decimal(10,2));\n\nReasoning: Let\'s think step by step in order to get the total revenue for each game. We need to group the games by their category and then sum up the revenue for each category.',
    sql="SELECT Category, SUM(Revenue) FROM Games WHERE Category = 'Gaming' GROUP BY Category;"
), 0), (Example({'sql_prompt': 'Delete all flight safety records for a specific aircraft', 'sql_context': "CREATE SCHEMA if not exists aerospace;CREATE TABLE if not exists aerospace.flight_safety (id INT, incident VARCHAR(255), incident_date DATE, aircraft_id INT);INSERT INTO aerospace.flight_safety (id, incident, incident_date, aircraft_id) VALUES (1, 'Inc1', '2017-01-01', 1), (2, 'Inc2', '2018-01-01', 1);", 'sql': 'DELETE FROM aerospace.flight_safety WHERE aircraft_id = 1;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the SQL queries based on the prompts and contexts:\n\n---\n\nSql Prompt: What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type?\nSql Context: CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);",
    sql='SELECT reduction_type, AVG(co2_reduction) FROM GreenBuildingProjects GROUP BY reduction_type;\n\n---\n\nSql Prompt: How many marine species are affected by ocean acid'
), 0), (Example({'sql_prompt': 'What is the average hotel price in each city in Europe?', 'sql_context': "CREATE TABLE Hotels_Europe (id INT, name VARCHAR(50), price DECIMAL(5,2), city VARCHAR(50)); INSERT INTO Hotels_Europe (id, name, price, city) VALUES (1, 'Grand Hotel', 200.00, 'Paris'), (2, 'Hotel Colosseo', 350.00, 'Rome'), (3, 'Park Royal', 120.00, 'London'), (4, 'Hotel Versailles', 420.00, 'Paris');", 'sql': 'SELECT city, AVG(price) as avg_price FROM Hotels_Europe GROUP BY city;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the fields `sql` produced based on the given fields `sql_prompt` and `sql_context`:\n\n---\n\nSql Prompt: What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type?\nSql Context: CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);",
    sql='SELECT reduction_type, AVG(co2_reduction) FROM GreenBuildingProjects GROUP BY reduction_type;\n\n---\n\nSql'
), 0), (Example({'sql_prompt': 'Show companies with below average ESG scores in the education sector.', 'sql_context': "INSERT INTO companies (id, name, country, sector, ESG_score) VALUES (4, 'EdCo', 'US', 'Education', 70.0), (5, 'LearnCo', 'UK', 'Education', 80.0);", 'sql': "SELECT * FROM companies WHERE sector = 'Education' AND ESG_score < (SELECT AVG(ESG_score) FROM companies WHERE sector = 'Education');"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the completed fields:\n\n---\n\nSql Prompt: What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type?\nSql Context: CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);",
    sql='SELECT reduction_type, AVG(co2_reduction) FROM GreenBuildingProjects GROUP BY reduction_type;\n\n---\n\nSql Prompt: How many marine species are affected by ocean acidification?\nSql Context: CREATE'
), 0), (Example({'sql_prompt': "Find the daily new user registrations in 'data_privacy' table for the last week?", 'sql_context': 'CREATE TABLE data_privacy (user_id INT, registration_date DATE);', 'sql': 'SELECT registration_date, COUNT(*) FROM data_privacy WHERE registration_date >= CURDATE() - INTERVAL 7 DAY GROUP BY registration_date;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the completed fields:\n\n---\n\nSql Prompt: What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type?\nSql Context: CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);",
    sql='SELECT reduction_type, AVG(co2_reduction) FROM GreenBuildingProjects GROUP BY reduction_type;\n\n---\n\nSql Prompt: How many marine species are affected by ocean acidification?\nSql Context: CREATE'
), 0), (Example({'sql_prompt': 'Update the total number of employees in the mining industry who identify as Native Hawaiian or Pacific Islander to 350 in California.', 'sql_context': "CREATE TABLE MiningEmployees (State VARCHAR(50), EmployeeEthnicity VARCHAR(50), EmployeeCount INT); INSERT INTO MiningEmployees(State, EmployeeEthnicity, EmployeeCount) VALUES ('Texas', 'Native American or Alaska Native', 200), ('Texas', 'Hispanic', 500), ('Texas', 'Black', 300), ('California', 'Native American or Alaska Native', 100), ('California', 'Hispanic', 700), ('California', 'Black', 600);", 'sql': "UPDATE MiningEmployees SET EmployeeCount = 350 WHERE State = 'California' AND EmployeeEthnicity = 'Native Hawaiian or Pacific Islander';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the answers:\n\n---\n\nSql Prompt: What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type?\nSql Context: CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);",
    sql='SELECT reduction_type, AVG(co2_reduction) FROM GreenBuildingProjects GROUP BY reduction_type;\n\n---\n\nSql Prompt: How many marine species are affected by ocean acidification?\nSql Context: CREATE TABLE'
), 0), (Example({'sql_prompt': 'What is the maximum number of patients served by a rural health center in Europe?', 'sql_context': 'CREATE TABLE centers (id INT, name VARCHAR(50), location VARCHAR(50), patients_served INT);', 'sql': "SELECT MAX(patients_served) FROM centers WHERE location LIKE '%Europe%' AND location LIKE '%rural%';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the completed fields:\n\n---\n\nSql Prompt: What is the maximum number of patients served by a rural health center in Europe?\n\nSql Context: CREATE TABLE centers (id INT, name VARCHAR(50), location VARCHAR(50), patients_served INT);\n\nReasoning: Let's think step by step in order to find the maximum number of patients served by a rural health center in Europe. We need to filter the data to only include rows where the location is 'Europe' and then use an aggregate function like MAX to get the highest value.",
    sql="SELECT MAX(patients_served) FROM centers WHERE location = 'Europe';"
), 0), (Example({'sql_prompt': 'Display the soldier names and branches from the view', 'sql_context': 'CREATE VIEW soldier_details AS SELECT id, name, branch FROM soldiers;', 'sql': 'SELECT name, branch FROM soldier_details;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the completed fields:\n\n---\n\nSql Prompt: What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type?\nSql Context: CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);",
    sql='SELECT reduction_type, AVG(co2_reduction) FROM GreenBuildingProjects GROUP BY reduction_type;\n\n---\n\nSql Prompt: How many marine species are affected by ocean acidification?\nSql Context: CREATE'
), 0), (Example({'sql_prompt': "What is the average attendance for 'Jazz' concerts?", 'sql_context': "CREATE TABLE concerts(id INT, genre VARCHAR(255), avg_attendance FLOAT); INSERT INTO concerts (id, genre, avg_attendance) VALUES (1, 'Jazz', 200.0), (2, 'Classical', 300.0), (3, 'Rock', 500.0);", 'sql': "SELECT avg_attendance FROM concerts WHERE genre = 'Jazz';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the fields `sql` produced based on the given fields `sql_prompt` and `sql_context`:\n\n---\n\nSql Prompt: What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type?\nSql Context: CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);",
    sql='SELECT reduction_type, AVG(co2_reduction) FROM GreenBuildingProjects GROUP BY reduction_type;\n\n---\n\nSql'
), 1), (Example({'sql_prompt': "How many astronauts are from 'Brazil'?", 'sql_context': "CREATE TABLE AstronautData (id INT, name VARCHAR(50), country VARCHAR(50), height FLOAT, weight FLOAT, blood_pressure FLOAT); INSERT INTO AstronautData (id, name, country, height, weight, blood_pressure) VALUES (1, 'John', 'USA', 180, 80, 120), (2, 'Jane', 'Canada', 170, 70, 110), (3, 'Alex', 'Brazil', 190, 90, 130), (4, 'Elena', 'Russia', 165, 60, 115);", 'sql': "SELECT COUNT(*) FROM AstronautData WHERE country = 'Brazil';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the fields `sql` produced based on the given fields `sql_prompt` and `sql_context`:\n\n---\n\nSql Prompt: What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type?\nSql Context: CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);",
    sql='SELECT reduction_type, AVG(co2_reduction) FROM GreenBuildingProjects GROUP BY reduction_type;\n\n---\n\nSql'
), 1), (Example({'sql_prompt': 'Delete all records in the "digital_divide_stats" table where the "country" is \'United States\'', 'sql_context': 'CREATE TABLE digital_divide_stats (id INT PRIMARY KEY, country VARCHAR(255), year INT, internet_users INT, total_population INT);', 'sql': "WITH deleted_data AS (DELETE FROM digital_divide_stats WHERE country = 'United States' RETURNING *) SELECT * FROM deleted_data;"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the fields `sql` produced based on the given fields `sql_prompt` and `sql_context`:\n\n---\n\nSql Prompt: What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type?\nSql Context: CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);",
    sql='SELECT reduction_type, AVG(co2_reduction) FROM GreenBuildingProjects GROUP BY reduction_type;\n\n---\n\nSql'
), 1), (Example({'sql_prompt': "What is the maximum depth of marine species in the 'marine_species' table, grouped by their phylum?", 'sql_context': "CREATE TABLE marine_species (id INT, name VARCHAR(255), phylum VARCHAR(255), depth FLOAT); INSERT INTO marine_species (id, name, phylum, depth) VALUES (1, 'Pacific salmon', 'Chordata', 50.0), (2, 'Hawaiian monk seal', 'Chordata', 500.0), (3, 'Sea anemone', 'Cnidaria', 0.01);", 'sql': 'SELECT phylum, MAX(depth) AS max_depth FROM marine_species GROUP BY phylum;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the fields `sql` produced based on the given fields `sql_prompt` and `sql_context`:\n\n---\n\nSql Prompt: What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type?\nSql Context: CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);",
    sql='SELECT reduction_type, AVG(co2_reduction) FROM GreenBuildingProjects GROUP BY reduction_type;\n\n---\n\nSql'
), 0), (Example({'sql_prompt': 'What is the percentage of autonomous vehicles sold in the US that are electric?', 'sql_context': 'CREATE TABLE AutonomousVehicles (Make VARCHAR(50), Model VARCHAR(50), Year INT, Country VARCHAR(50), Type VARCHAR(50), Sales INT);', 'sql': "SELECT 100.0 * SUM(CASE WHEN Type = 'Electric' THEN Sales ELSE 0 END) / SUM(Sales) AS Percentage FROM AutonomousVehicles WHERE Country = 'United States';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here is the completed response:\n\nSql Prompt: What is the percentage of autonomous vehicles sold in the US that are electric?\n\nSql Context: CREATE TABLE AutonomousVehicles (Make VARCHAR(50), Model VARCHAR(50), Year INT, Country VARCHAR(50), Type VARCHAR(50), Sales INT);\n\nReasoning: Let's think step by step in order to ${produce the sql}. We need to first filter the data for autonomous vehicles sold in the US and then count the number of electric vehicles. Then we can divide this count by the total number of autonomous vehicles sold in the US to get the percentage.",
    sql="SELECT (COUNT(*) FILTER (WHERE Country = 'US' AND Type = 'Electric') / COUNT(*)) * 100 FROM Autonomous"
), 0), (Example({'sql_prompt': 'Show the average number of streams per day for artists who have held concerts in the USA and Canada.', 'sql_context': 'CREATE TABLE music_streaming (artist_id INT, artist_name VARCHAR(100), genre VARCHAR(50), total_streams BIGINT, stream_date DATE); CREATE TABLE concert_ticket_sales (concert_id INT, artist_id INT, concert_date DATE, venue VARCHAR(100), country VARCHAR(50));', 'sql': "SELECT AVG(ms.total_streams / COUNT(DISTINCT ms.stream_date)) AS avg_daily_streams FROM music_streaming ms INNER JOIN concert_ticket_sales cts ON ms.artist_id = cts.artist_id WHERE cts.country IN ('USA', 'Canada');"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the completed fields:\n\n---\n\nSql Prompt: Show the average number of streams per day for artists who have held concerts in the USA and Canada.\n\nSql Context: CREATE TABLE music_streaming (artist_id INT, artist_name VARCHAR(100), genre VARCHAR(50), total_streams BIGINT, stream_date DATE); CREATE TABLE concert_ticket_sales (concert_id INT, artist_id INT, concert_date DATE, venue VARCHAR(100), country VARCHAR(50));\n\nReasoning: Let's think step by step in order to get the average number of streams per day for artists who have held concerts in the USA and Canada. We need to join the two tables on the artist_id column, filter the results to only include concerts in the USA and Canada, group",
    sql="Here are the completed fields:\n\n---\n\nSql Prompt: Show the average number of streams per day for artists who have held concerts in the USA and Canada.\n\nSql Context: CREATE TABLE music_streaming (artist_id INT, artist_name VARCHAR(100), genre VARCHAR(50), total_streams BIGINT, stream_date DATE); CREATE TABLE concert_ticket_sales (concert_id INT, artist_id INT, concert_date DATE, venue VARCHAR(100), country VARCHAR(50));\n\nReasoning: Let's think step by step in order to get the average number of streams per day for artists who have held concerts in the USA and Canada. We need to join the two tables on the artist_id column, filter the results to only include concerts in the USA and Canada, group"
), 1), (Example({'sql_prompt': 'What is the minimum number of crimes committed in each type for the past year?', 'sql_context': "CREATE TABLE crimes (crime_id INT, crime_type VARCHAR(255), committed_date DATE); INSERT INTO crimes (crime_id, crime_type, committed_date) VALUES (1, 'Theft', '2022-01-01'), (2, 'Assault', '2022-01-02'), (3, 'Theft', '2022-01-03');", 'sql': 'SELECT c.crime_type, MIN(COUNT(c.crime_id)) FROM crimes c WHERE c.committed_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY c.crime_type;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the SQL queries based on the prompts and contexts:\n\n---\n\nSql Prompt: What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type?\nSql Context: CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);",
    sql='SELECT reduction_type, AVG(co2_reduction) FROM GreenBuildingProjects GROUP BY reduction_type;\n\n---\n\nSql Prompt: How many marine species are affected by ocean acid'
), 0), (Example({'sql_prompt': "Delete all marine species in the 'marine_species' table that belong to the 'Mollusca' phylum.", 'sql_context': "CREATE TABLE marine_species (id INT, name VARCHAR(255), phylum VARCHAR(255)); INSERT INTO marine_species (id, name, phylum) VALUES (1, 'Pacific salmon', 'Chordata'), (2, 'Blue whale', 'Chordata'), (3, 'Sea anemone', 'Cnidaria');", 'sql': "DELETE FROM marine_species WHERE phylum = 'Mollusca';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the answers:\n\n---\n\nSql Prompt: What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type?\nSql Context: CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);",
    sql='SELECT reduction_type, AVG(co2_reduction) FROM GreenBuildingProjects GROUP BY reduction_type;\n\n---\n\nSql Prompt: How many marine species are affected by ocean acidification?\nSql Context: CREATE TABLE'
), 0), (Example({'sql_prompt': 'What is the average price of vegan menu items in the database?', 'sql_context': "CREATE TABLE menus (menu_id INT, menu_name TEXT, type TEXT, price DECIMAL); INSERT INTO menus (menu_id, menu_name, type, price) VALUES (1, 'Quinoa Salad', 'Vegetarian', 12.99), (2, 'Chicken Caesar Wrap', 'Gluten-free', 10.99), (3, 'Vegan Burger', 'Vegan', 14.99), (4, 'Falafel Wrap', 'Vegan', 9.99);", 'sql': "SELECT AVG(price) FROM menus WHERE type = 'Vegan';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the fields `sql` produced based on the given fields `sql_prompt` and `sql_context`:\n\n---\n\nSql Prompt: What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type?\nSql Context: CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);",
    sql='SELECT reduction_type, AVG(co2_reduction) FROM GreenBuildingProjects GROUP BY reduction_type;\n\n---\n\nSql'
), 0), (Example({'sql_prompt': "What is the total number of military vehicles produced by company 'XYZ'?", 'sql_context': "CREATE TABLE military_vehicles (company TEXT, quantity INT, production_date DATE); INSERT INTO military_vehicles (company, quantity, production_date) VALUES ('ABC', 100, '2023-01-01'); INSERT INTO military_vehicles (company, quantity, production_date) VALUES ('XYZ', 200, '2023-02-01');", 'sql': "SELECT SUM(quantity) FROM military_vehicles WHERE company = 'XYZ';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the fields `sql` produced based on the given fields `sql_prompt` and `sql_context`:\n\n---\n\nSql Prompt: What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type?\nSql Context: CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);",
    sql='SELECT reduction_type, AVG(co2_reduction) FROM GreenBuildingProjects GROUP BY reduction_type;\n\n---\n\nSql'
), 0), (Example({'sql_prompt': 'Find the supplier with the lowest average delivery time for orders in the last month.', 'sql_context': "CREATE TABLE Suppliers (SupplierID int, SupplierName varchar(50)); CREATE TABLE Products (ProductID int, ProductName varchar(50), SupplierID int); CREATE TABLE Orders (OrderID int, ProductID int, OrderDate date, DeliveryTime int); INSERT INTO Suppliers VALUES (1, 'SupplierA'), (2, 'SupplierB'); INSERT INTO Products VALUES (1, 'Organic Apples', 1), (2, 'Bananas', 2); INSERT INTO Orders VALUES (1, 1, '2022-01-01', 2), (2, 2, '2022-01-03', 3);", 'sql': 'SELECT SupplierName, AVG(DeliveryTime) as AvgDeliveryTime FROM Orders o JOIN Products p ON o.ProductID = p.ProductID JOIN Suppliers sp ON p.SupplierID = sp.SupplierID WHERE OrderDate >= DATEADD(month, -1, GETDATE()) GROUP BY SupplierName ORDER BY AvgDeliveryTime ASC;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the fields `sql` produced based on the given fields `sql_prompt` and `sql_context`:\n\n---\n\nSql Prompt: What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type?\nSql Context: CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);",
    sql='SELECT reduction_type, AVG(co2_reduction) FROM GreenBuildingProjects GROUP BY reduction_type;\n\n---\n\nSql'
), 1), (Example({'sql_prompt': 'What is the maximum number of games played concurrently by a player, for each platform?', 'sql_context': "CREATE TABLE PlayerGames (PlayerID INT, Platform VARCHAR(10), MaxGames INT); INSERT INTO PlayerGames (PlayerID, Platform, MaxGames) VALUES (1, 'PC', 3);", 'sql': 'SELECT Platform, MAX(MaxGames) as MaxConcurrentGames FROM PlayerGames GROUP BY Platform;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the fields `sql` produced based on the given fields `sql_prompt` and `sql_context`:\n\n---\n\nSql Prompt: What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type?\nSql Context: CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);",
    sql='SELECT reduction_type, AVG(co2_reduction) FROM GreenBuildingProjects GROUP BY reduction_type;\n\n---\n\nSql'
), 1), (Example({'sql_prompt': 'Which broadband subscribers have a download speed greater than 300 Mbps?', 'sql_context': 'CREATE TABLE broadband_subscribers (subscriber_id INT, download_speed FLOAT); INSERT INTO broadband_subscribers (subscriber_id, download_speed) VALUES (1, 250.6), (2, 350.8), (3, 120.9);', 'sql': 'SELECT subscriber_id FROM broadband_subscribers WHERE download_speed > 300;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the fields `sql` produced based on the given fields `sql_prompt` and `sql_context`:\n\n---\n\nSql Prompt: What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type?\nSql Context: CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);",
    sql='SELECT reduction_type, AVG(co2_reduction) FROM GreenBuildingProjects GROUP BY reduction_type;\n\n---\n\nSql'
), 0), (Example({'sql_prompt': 'Which cities have a higher average temperature in the "Finance" scheme than in the "Mitigation" scheme?', 'sql_context': "CREATE TABLE Mitigation (city VARCHAR(255), avg_temp FLOAT); INSERT INTO Mitigation VALUES ('CityA', 20.5), ('CityB', 22.3); CREATE TABLE Finance (city VARCHAR(255), avg_temp FLOAT); INSERT INTO Finance VALUES ('CityA', 23.0), ('CityX', 23.5);", 'sql': 'SELECT Finance.city FROM Finance, Mitigation WHERE Finance.city = Mitigation.city AND Finance.avg_temp > Mitigation.avg_temp'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the completed fields:\n\n---\n\nSql Prompt: What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type?\n\nSql Context: CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);\n\nReasoning: Let's think step by step in order to ${produce the sql}. We need to calculate the average CO2 emission reduction for each type of reduction.",
    sql='SELECT reduction_type,'
), 0), (Example({'sql_prompt': "What is the average playtime, in hours, for players from Germany, for games in the 'Simulation' genre?", 'sql_context': 'CREATE TABLE games (game_id INT, game_genre VARCHAR(255), player_id INT, playtime_mins INT); CREATE TABLE players (player_id INT, player_country VARCHAR(255));', 'sql': "SELECT AVG(playtime_mins / 60) FROM games JOIN players ON games.player_id = players.player_id WHERE players.player_country = 'Germany' AND game_genre = 'Simulation';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the completed fields:\n\n---\n\nSql Prompt: What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type?\nSql Context: CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);",
    sql='SELECT reduction_type, AVG(co2_reduction) FROM GreenBuildingProjects GROUP BY reduction_type;\n\n---\n\nSql Prompt: How many marine species are affected by ocean acidification?\nSql Context: CREATE'
), 0), (Example({'sql_prompt': 'Show the sum of investments by year and industry', 'sql_context': "CREATE TABLE investments (id INT, investment_year INT, industry VARCHAR(255), investment_amount DECIMAL(10,2)); INSERT INTO investments (id, investment_year, industry, investment_amount) VALUES (1, 2020, 'Tech', 50000.00), (2, 2019, 'Biotech', 20000.00), (3, 2020, 'Tech', 75000.00);", 'sql': 'SELECT investment_year, industry, SUM(investment_amount) as total_investments FROM investments GROUP BY investment_year, industry;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the fields `sql` produced based on the given fields `sql_prompt` and `sql_context`:\n\n---\n\nSql Prompt: What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type?\nSql Context: CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);",
    sql='SELECT reduction_type, AVG(co2_reduction) FROM GreenBuildingProjects GROUP BY reduction_type;\n\n---\n\nSql'
), 0), (Example({'sql_prompt': 'What is the total amount of funds allocated for each type of disaster?', 'sql_context': "CREATE TABLE DisasterFunds (DisasterType VARCHAR(20), FundID INT, AllocatedAmount DECIMAL(10,2)); INSERT INTO DisasterFunds (DisasterType, FundID, AllocatedAmount) VALUES ('Earthquake', 1, 5000.00), ('Flood', 2, 7500.00), ('Hurricane', 3, 10000.00), ('Tornado', 4, 12500.00), ('Volcano', 5, 15000.00);", 'sql': 'SELECT DisasterType, SUM(AllocatedAmount) as TotalFunds FROM DisasterFunds GROUP BY DisasterType;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the answers:\n\n---\n\nSql Prompt: What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type?\n\nSql Context: CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);\n\nReasoning: Let's think step by step in order to ${produce the sql}. We need to group the CO2 emission reductions by reduction_type and calculate the average for each type.",
    sql='SELECT'
), 0), (Example({'sql_prompt': 'What is the market share of Hotel X in terms of revenue generated by hotels in New York City?', 'sql_context': "CREATE TABLE hotels (hotel_id INT, hotel_name TEXT, city TEXT, revenue FLOAT); INSERT INTO hotels (hotel_id, hotel_name, city, revenue) VALUES (1, 'Hotel X', 'New York City', 1000000), (2, 'Hotel Y', 'New York City', 800000), (3, 'Hotel Z', 'New York City', 700000);", 'sql': "SELECT (hotels.revenue / (SELECT SUM(revenue) FROM hotels WHERE city = 'New York City') * 100) as market_share FROM hotels WHERE hotel_name = 'Hotel X';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the fields `sql` produced based on the given fields `sql_prompt` and `sql_context`:\n\n---\n\nSql Prompt: What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type?\nSql Context: CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);",
    sql='SELECT reduction_type, AVG(co2_reduction) FROM GreenBuildingProjects GROUP BY reduction_type;\n\n---\n\nSql'
), 1), (Example({'sql_prompt': "How many vehicles of type 'Trolleybus' are due for maintenance in the next 30 days?", 'sql_context': "CREATE TABLE vehicles (id INT, vehicle_type VARCHAR(255), model_year INT, last_maintenance_date DATE, next_maintenance_date DATE); INSERT INTO vehicles (id, vehicle_type, model_year, last_maintenance_date, next_maintenance_date) VALUES (2004, 'Trolleybus', 2020, '2022-04-20', '2022-07-20'), (2005, 'Tram', 2019, '2022-05-15', '2022-11-15');", 'sql': "SELECT vehicle_type, TIMESTAMPDIFF(DAY, CURDATE(), next_maintenance_date) as days_until_next_maintenance FROM vehicles WHERE vehicle_type = 'Trolleybus' HAVING days_until_next_maintenance <= 30;"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the completed fields:\n\n---\n\nSql Prompt: What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type?\n\nSql Context: CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);\n\nReasoning: Let's think step by step in order to ${produce the sql}. We need to group the CO2 emission reductions by reduction_type and calculate the average for each type.",
    sql="Here is the completed field:\n\n---\n\nSql Prompt: How many vehicles of type 'Trolleybus' are due for maintenance in the next 30 days?\n\nSql Context: CREATE TABLE vehicles (id INT, vehicle_type VARCHAR(255), model_year INT, last_maintenance_date DATE, next_maintenance_date DATE); INSERT INTO vehicles (id, vehicle_type, model_year, last_maintenance_date, next_maintenance_date) VALUES (2004, 'Trolleybus', 2020, '2022-04-20', '2022-07-20'), (2005, 'Tram', 2019, '2022-05-15', '2022-11-15');\n\nReasoning: Let's think step"
), 1), (Example({'sql_prompt': "Insert a new row into the 'startups' table for 'Health Startup 5', founded in '2022-03-15' by 'Middle Eastern' founder, with a funding amount of $7,500,000", 'sql_context': 'CREATE TABLE startups (id INT, name TEXT, industry TEXT, founding_date DATE, raised_funding FLOAT, founder_race TEXT);', 'sql': "INSERT INTO startups (name, industry, founding_date, raised_funding, founder_race) VALUES ('Health Startup 5', 'Healthcare', '2022-03-15', 7500000.00, 'Middle Eastern');"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the completed fields:\n\n---\n\nSql Prompt: What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type?\n\nSql Context: CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);\n\nReasoning: Let's think step by step in order to ${produce the sql}. We need to group the CO2 emission reductions by reduction_type and calculate the average for each type.",
    sql="Here is the rewritten text in the specified format:\n\nSql Prompt: Insert a new row into the 'startups' table for 'Health Startup 5', founded in '2022-03-15' by 'Middle Eastern' founder, with a funding amount of $7,500,000\n\nSql Context: CREATE TABLE startups (id INT, name TEXT, industry TEXT, founding_date DATE, raised_funding FLOAT, founder_race TEXT);\n\nReasoning: Let's think step by step in order to insert a new row into the 'startups' table. We need to specify the values for each column. The columns are id, name, industry, founding_date, raised_funding, and founder_race.\n\nSql: INSERT INTO startups (name"
), 1), (Example({'sql_prompt': 'How many mental health parity complaints were filed in the last 12 months by state?', 'sql_context': "CREATE TABLE mental_health_parity_complaints (complaint_id INT, complaint_date DATE, state VARCHAR(20)); INSERT INTO mental_health_parity_complaints (complaint_id, complaint_date, state) VALUES (1, '2021-01-01', 'California'), (2, '2021-03-15', 'New York'), (3, '2020-12-31', 'Texas');", 'sql': 'SELECT state, COUNT(*) as num_complaints FROM mental_health_parity_complaints WHERE complaint_date >= DATE_SUB(CURRENT_DATE, INTERVAL 12 MONTH) GROUP BY state;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the fields `sql` produced based on the given fields `sql_prompt` and `sql_context`:\n\n---\n\nSql Prompt: What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type?\nSql Context: CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);",
    sql='SELECT reduction_type, AVG(co2_reduction) FROM GreenBuildingProjects GROUP BY reduction_type;\n\n---\n\nSql'
), 0), (Example({'sql_prompt': 'Which chemical plants have exceeded the maximum allowed emission limit in the last year?', 'sql_context': "CREATE TABLE plants (plant_id INT, plant_name VARCHAR(50)); CREATE TABLE emissions (plant_id INT, emission_level INT, emission_date DATE); INSERT INTO plants (plant_id, plant_name) VALUES (1, 'Plant A'), (2, 'Plant B'); INSERT INTO emissions (plant_id, emission_level, emission_date) VALUES (1, 500, '2022-01-01'), (2, 450, '2022-01-01');", 'sql': 'SELECT plants.plant_name FROM plants INNER JOIN emissions ON plants.plant_id = emissions.plant_id WHERE emissions.emission_level > (SELECT MAX(emission_limit) FROM allowed_emissions) AND emissions.emission_date >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR);'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the completed fields:\n\n---\n\nSql Prompt: What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type?\n\nSql Context: CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);\n\nReasoning: Let's think step by step in order to ${produce the sql}. We need to calculate the average CO2 emission reduction for each type of reduction. This can be done using the",
    sql="Here is the completed field:\n\n---\n\nSql Prompt: Which chemical plants have exceeded the maximum allowed emission limit in the last year?\n\nSql Context: CREATE TABLE plants (plant_id INT, plant_name VARCHAR(50)); CREATE TABLE emissions (plant_id INT, emission_level INT, emission_date DATE); INSERT INTO plants (plant_id, plant_name) VALUES (1, 'Plant A'), (2, 'Plant B'); INSERT INTO emissions (plant_id, emission_level, emission_date) VALUES (1, 500, '2022-01-01'), (2, 450, '2022-01-01');\n\nReasoning: Let's think step by step in order to produce the SQL. We need to find the plants that have exceeded"
), 1), (Example({'sql_prompt': 'What is the total duration played for each player?', 'sql_context': "CREATE TABLE PlayerGame (PlayerID INT, GameID INT, Played DATE, StartTime TIMESTAMP, EndTime TIMESTAMP); INSERT INTO PlayerGame (PlayerID, GameID, Played, StartTime, EndTime) VALUES (1, 1, '2022-01-01', '2022-01-01 10:00:00', '2022-01-01 12:00:00'), (2, 2, '2022-01-02', '2022-01-02 14:00:00', '2022-01-02 16:00:00'), (3, 1, '2022-01-03', '2022-01-03 10:00:00', '2022-01-03 11:00:00'), (4, 3, '2022-01-04', '2022-01-04 18:00:00', '2022-01-04 19:00:00');", 'sql': 'SELECT PlayerID, SUM(TIMESTAMPDIFF(MINUTE, StartTime, EndTime)) FROM PlayerGame GROUP BY PlayerID;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the SQL queries:\n\n---\n\nSql Prompt: What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type?\nSql Context: CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);",
    sql='SELECT reduction_type, AVG(co2_reduction) FROM GreenBuildingProjects GROUP BY reduction_type;\n\n---\n\nSql Prompt: How many marine species are affected by ocean acidification?\nSql Context: CREATE'
), 0), (Example({'sql_prompt': 'What is the percentage of legal technology patents granted to applicants in California since 2010?', 'sql_context': 'CREATE TABLE legal_technology_patents (patent_id INT, grant_date DATE, state VARCHAR(20));', 'sql': "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM legal_technology_patents WHERE grant_date >= '2010-01-01')) AS percentage FROM legal_technology_patents WHERE state = 'California';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the completed fields:\n\n---\n\nSql Prompt: What is the percentage of legal technology patents granted to applicants in California since 2010?\n\nSql Context: CREATE TABLE legal_technology_patents (patent_id INT, grant_date DATE, state VARCHAR(20));\n\nReasoning: Let's think step by step in order to calculate the percentage of legal technology patents granted to applicants in California since 2010. We need to first count the total number of patents granted in California during this period, and then divide that by the total number of patents granted worldwide during this period.",
    sql="SELECT (COUNT(*) FILTER (WHERE state = 'California' AND grant_date >= '2010-01-01') / COUNT(*)) * 100 FROM"
), 0), (Example({'sql_prompt': "What is the total quantity of menu items sold in the 'Appetizers' category from the 'Asian' cuisine type?", 'sql_context': "CREATE TABLE menu (menu_id INT, menu_name VARCHAR(50), category VARCHAR(50), cuisine VARCHAR(50), quantity_sold INT, price DECIMAL(5,2), month_sold INT); INSERT INTO menu (menu_id, menu_name, category, cuisine, quantity_sold, price, month_sold) VALUES (12, 'Spring Rolls', 'Appetizers', 'Asian', 30, 4.99, 1), (13, 'Edamame', 'Appetizers', 'Asian', 40, 3.99, 1);", 'sql': "SELECT SUM(quantity_sold) FROM menu WHERE category = 'Appetizers' AND cuisine = 'Asian';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the answers:\n\n---\n\nSql Prompt: What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type?\nSql Context: CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);",
    sql='SELECT reduction_type, AVG(co2_reduction) FROM GreenBuildingProjects GROUP BY reduction_type;\n\n---\n\nSql Prompt: How many marine species are affected by ocean acidification?\nSql Context: CREATE TABLE'
), 0), (Example({'sql_prompt': 'How many volunteers signed up in each region in 2021?', 'sql_context': "CREATE TABLE volunteers (id INT, name TEXT, region TEXT, signup_date DATE); INSERT INTO volunteers (id, name, region, signup_date) VALUES (1, 'Alice', 'North', '2021-02-03'), (2, 'Bob', 'South', '2021-05-05'), (3, 'Charlie', 'East', '2020-12-12');", 'sql': 'SELECT region, COUNT(*) FROM volunteers WHERE YEAR(signup_date) = 2021 GROUP BY region;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the answers:\n\n---\n\nSql Prompt: What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type?\nSql Context: CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);",
    sql='SELECT reduction_type, AVG(co2_reduction) FROM GreenBuildingProjects GROUP BY reduction_type;\n\n---\n\nSql Prompt: How many marine species are affected by ocean acidification?\nSql Context: CREATE TABLE'
), 0), (Example({'sql_prompt': 'What is the total distance traveled for all buses in the London transit system in the past week?', 'sql_context': 'CREATE TABLE london_buses (bus_id INT, daily_distance FLOAT, date DATE);', 'sql': 'SELECT SUM(daily_distance) FROM london_buses WHERE date >= DATE_SUB(NOW(), INTERVAL 1 WEEK);'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the completed fields:\n\n---\n\nSql Prompt: What is the total distance traveled for all buses in the London transit system in the past week?\n\nSql Context: CREATE TABLE london_buses (bus_id INT, daily_distance FLOAT, date DATE);\n\nReasoning: Let's think step by step in order to calculate the total distance traveled. We need to first filter the data to only include dates within the past week, then sum up the daily distances for all buses.",
    sql="SELECT SUM(daily_distance) FROM london_buses WHERE date >= DATE_SUB(CURRENT_DATE, INTERVAL 7 DAY);\n\n---\n\nLet me know if you'd like me to generate more!"
), 1), (Example({'sql_prompt': "List all suppliers who provide products to 'Organic Foods' store in the 'StoreSuppliers' table", 'sql_context': "CREATE TABLE StoreSuppliers (store VARCHAR(255), supplier VARCHAR(255)); INSERT INTO StoreSuppliers (store, supplier) VALUES ('Organic Foods', 'Supplier A'), ('Organic Foods', 'Supplier B'), ('Health Foods', 'Supplier C');", 'sql': "SELECT supplier FROM StoreSuppliers WHERE store = 'Organic Foods';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the completed fields:\n\n---\n\nSql Prompt: What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type?\n\nSql Context: CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);\n\nReasoning: Let's think step by step in order to ${produce the sql}. We need to group the CO2 emission reductions by reduction_type and calculate the average for each type.",
    sql="Here is the completed field:\n\n---\n\nSql Prompt: List all suppliers who provide products to 'Organic Foods' store in the 'StoreSuppliers' table\n\nSql Context: CREATE TABLE StoreSuppliers (store VARCHAR(255), supplier VARCHAR(255)); INSERT INTO StoreSuppliers (store, supplier) VALUES ('Organic Foods', 'Supplier A'), ('Organic Foods', 'Supplier B'), ('Health Foods', 'Supplier C');\n\nReasoning: Let's think step by step in order to produce the SQL. We need to filter the suppliers based on the store name 'Organic Foods'.\n\nSql: SELECT supplier FROM StoreSuppliers WHERE store = 'Organic Foods';"
), 1), (Example({'sql_prompt': 'What is the percentage of total humanitarian aid spent on education in each world region?', 'sql_context': "CREATE TABLE humanitarian_aid (id INT, region TEXT, category TEXT, amount FLOAT); INSERT INTO humanitarian_aid (id, region, category, amount) VALUES (1, 'Africa', 'Education', 500), (2, 'Asia', 'Health', 750), (3, 'Africa', 'Health', 250);", 'sql': "SELECT region, (SUM(case when category = 'Education' then amount else 0 end) / SUM(amount)) * 100 as education_percentage FROM humanitarian_aid GROUP BY region;"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the completed fields:\n\n---\n\nSql Prompt: What is the average CO2 emission reduction of green building projects in the 'GreenBuildingProjects' table, grouped by reduction_type?\n\nSql Context: CREATE TABLE GreenBuildingProjects (id INT, reduction_type VARCHAR(50), co2_reduction FLOAT); INSERT INTO GreenBuildingProjects (id, reduction_type, co2_reduction) VALUES (1, 'Insulation', 50.0), (2, 'Lighting', 75.0), (3, 'Insulation', 60.0);\n\nReasoning: Let's think step by step in order to ${produce the sql}. We need to calculate the average CO2 emission reduction for each reduction type, so we'll use the AVG function",
    sql="Here is the completed field:\n\n---\n\nSql Prompt: What is the percentage of total humanitarian aid spent on education in each world region?\n\nSql Context: CREATE TABLE humanitarian_aid (id INT, region TEXT, category TEXT, amount FLOAT); INSERT INTO humanitarian_aid (id, region, category, amount) VALUES (1, 'Africa', 'Education', 500), (2, 'Asia', 'Health', 750), (3, 'Africa', 'Health', 250);\n\nReasoning: Let's think step by step in order to produce the SQL. We need to calculate the total aid spent on education for each region and then divide it by the total aid spent in that region to get the percentage.\n\nSql: SELECT region, SUM"
), 1)]