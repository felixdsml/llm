[(Example({'sql_prompt': "Update the name of the passenger with the id 3 to 'Emily Lee'.", 'sql_context': "CREATE TABLE PASSENGERS (id INT, name VARCHAR(50)); INSERT INTO PASSENGERS VALUES (3, 'James Brown');", 'sql': "UPDATE PASSENGERS SET name = 'Emily Lee' WHERE id = 3;"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here is the completed signature:\n\n---\n\nSignature for Text to SQL generation task.\n\n---\n\nSql Prompt: Update the name of the passenger with the id 3 to 'Emily Lee'.\n\nSql Context: CREATE TABLE PASSENGERS (id INT, name VARCHAR(50)); INSERT INTO PASSENGERS VALUES (3, 'James Brown');\n\nReasoning: Let's think step by step in order to update the name of a specific passenger. We need to identify the row that corresponds to the passenger with id 3 and then update its name.",
    sql="UPDATE PASSENGERS SET name = 'Emily Lee' WHERE id = 3;\n\n---\n\nLet me know if you'd like me to add more examples!"
), 1), (Example({'sql_prompt': "What is the number of women-led agricultural businesses in the 'business_data' table?", 'sql_context': "CREATE TABLE business_data (business_id INT, business_name VARCHAR(50), gender VARCHAR(10)); INSERT INTO business_data (business_id, business_name, gender) VALUES (1, 'Green Acres', 'female'), (2, 'Brown Farms', 'male'), (3, 'Eco Harvest', 'non-binary');", 'sql': "SELECT COUNT(business_id) FROM business_data WHERE gender = 'female';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here are the signatures for Text-to-SQL generation tasks in the format you requested:\n\n**Signature 1**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT,"
), 0), (Example({'sql_prompt': "What is the average rating for 'Gluten-Free' items?", 'sql_context': "CREATE TABLE ratings (item_name TEXT, is_gluten_free BOOLEAN, rating INTEGER); INSERT INTO ratings (item_name, is_gluten_free, rating) VALUES ('Quinoa Salad', true, 4); INSERT INTO ratings (item_name, is_gluten_free, rating) VALUES ('Chicken Stir Fry', false, 5);", 'sql': 'SELECT AVG(rating) FROM ratings WHERE is_gluten_free = true;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**1. Signature**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here are the signatures for Text-to-SQL generation tasks:\n\n**Signature**\nSql Prompt: Natural language query\nSql Context: Context for the query\nReasoning: Let's think step by step in order to ${produce the sql}. We ...\nSql: SQL query\n\n---\n\n**1. Signature**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id,"
), 0), (Example({'sql_prompt': 'What is the maximum amount of dissolved oxygen (DO) in the ocean_health table for each month in 2021?', 'sql_context': "CREATE TABLE ocean_health (date DATE, do_value INT); INSERT INTO ocean_health (date, do_value) VALUES ('2021-01-01', 8), ('2021-01-02', 7), ('2021-02-01', 6), ('2021-02-02', 9);", 'sql': "SELECT EXTRACT(MONTH FROM date) as month, MAX(do_value) as max_do_value FROM ocean_health WHERE date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY EXTRACT(MONTH FROM date);"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here is the signature for Text-to-SQL generation tasks:\n\n**Signature 1**\nSql Prompt: What is the maximum amount of dissolved oxygen (DO) in the ocean_health table for each month in 2021?\n\nSql Context: CREATE TABLE ocean_health (date DATE, do_value INT); INSERT INTO ocean_health (date, do_value) VALUES ('2021-01-01', 8), ('2021-01-02', 7), ('2021-02-01', 6), ('2021-02-02', 9);\n\nReasoning: Let's think step by step in order to produce the SQL. We need to group the data by month and find the maximum value of dissolved oxygen for each month."
), 1), (Example({'sql_prompt': 'What are the total sales and quantity of goods sold by each salesperson, grouped by city?', 'sql_context': 'CREATE TABLE salesperson (id INT, name TEXT, city TEXT); CREATE TABLE sales (id INT, salesperson_id INT, product TEXT, quantity INT, total_sales FLOAT);', 'sql': 'SELECT s.name, s.city, SUM(s.total_sales) as total_sales, SUM(s.quantity) as total_quantity FROM sales s JOIN salesperson sp ON s.salesperson_id = sp.id GROUP BY s.city, s.name;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**1. Signature**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here is the signature for Text-to-SQL generation tasks in the format you requested:\n\n**Signature**\n\nSql Prompt: What are the total sales and quantity of goods sold by each salesperson, grouped by city?\n\nSql Context: CREATE TABLE salesperson (id INT, name TEXT, city TEXT); CREATE TABLE sales (id INT, salesperson_id INT, product TEXT, quantity INT, total_sales FLOAT);\n\nReasoning: Let's think step by step in order to produce the SQL. We need to join the `salesperson` and `sales` tables on the `id` column, then group the results by `city` and aggregate the `quantity` and `total_sales` columns.\n\nSql: SELECT salesperson.city, SUM(sales.quantity"
), 0), (Example({'sql_prompt': 'What is the total funding received by startups in the technology sector that were founded by women?', 'sql_context': "CREATE TABLE startups(id INT, name TEXT, sector TEXT, founder_gender TEXT, funding FLOAT); INSERT INTO startups VALUES (1, 'Acme Inc', 'Technology', 'Female', 2000000); INSERT INTO startups VALUES (2, 'Beta Corp', 'Retail', 'Male', 3000000); INSERT INTO startups VALUES (3, 'Gamma Start', 'Technology', 'Female', 5000000);", 'sql': "SELECT SUM(funding) FROM startups WHERE sector = 'Technology' AND founder_gender = 'Female';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**1. Signature**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here is the signature for Text-to-SQL generation tasks in the format you requested:\n\n**Signature**\n\nSql Prompt: What is the total funding received by startups in the technology sector that were founded by women?\n\nSql Context: CREATE TABLE startups(id INT, name TEXT, sector TEXT, founder_gender TEXT, funding FLOAT); INSERT INTO startups VALUES (1, 'Acme Inc', 'Technology', 'Female', 2000000); INSERT INTO startups VALUES (2, 'Beta Corp', 'Retail', 'Male', 3000000); INSERT INTO startups VALUES (3, 'Gamma Start', 'Technology', 'Female', 5000000);\n\nReasoning: Let's think step by step in order to produce the SQL. We need to filter"
), 1), (Example({'sql_prompt': 'What is the recycling rate of plastic in the residential sector in the state of New York?', 'sql_context': "CREATE TABLE recycling_rates_city (sector VARCHAR(20), city VARCHAR(20), material VARCHAR(20), recycling_rate DECIMAL(5,2)); INSERT INTO recycling_rates_city (sector, city, material, recycling_rate) VALUES ('residential', 'New York City', 'plastic', 0.25), ('commercial', 'New York City', 'plastic', 0.30), ('residential', 'New York City', 'paper', 0.45), ('commercial', 'New York City', 'paper', 0.50), ('residential', 'Los Angeles', 'plastic', 0.20), ('commercial', 'Los Angeles', 'plastic', 0.35), ('residential', 'Los Angeles', 'paper', 0.40), ('commercial', 'Los Angeles', 'paper', 0.50);", 'sql': "SELECT recycling_rate FROM recycling_rates_city WHERE sector = 'residential' AND material = 'plastic' AND city = 'New York City';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n**1. How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Other Team'); CREATE TABLE matches (match_id INT, team_id INT, year INT); INSERT INTO matches (match_id, team_id, year) VALUES (1, 1, 2020), (2, 2, 2020); CREATE TABLE yellow",
    sql="Here are the signatures for Text-to-SQL generation tasks:\n\n**1. How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\n\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Other Team'); CREATE TABLE matches (match_id INT, team_id INT, year INT); INSERT INTO matches (match_id, team_id, year) VALUES (1, 1, 2020), (2, 2, 2020); CREATE TABLE yellow"
), 0), (Example({'sql_prompt': "Which startups in the 'StartupFunding' table received funding in 2020 or later and have a budget greater than $500,000?", 'sql_context': "CREATE SCHEMA BiotechStartups; CREATE TABLE StartupFunding (startup_name VARCHAR(50), funding_year INT, funding DECIMAL(10, 2)); INSERT INTO StartupFunding VALUES ('StartupA', 2019, 500000), ('StartupB', 2020, 750000);", 'sql': 'SELECT startup_name FROM BiotechStartups.StartupFunding WHERE funding_year >= 2020 AND funding > 500000;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**1. Signature**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here are the signatures for Text-to-SQL generation tasks:\n\n**Signature**\nSql Prompt: [Natural language query]\nSql Context: [Context for the query]\nReasoning: Let's think step by step in order to ${produce the sql}. We ... \nSql: [SQL query]\n\n---\n\n**1. Signature**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id"
), 0), (Example({'sql_prompt': "How many female engineers are there in 'australian_mines'?", 'sql_context': "CREATE SCHEMA if not exists australia_schema;CREATE TABLE australia_schema.australian_mines (id INT, name VARCHAR, gender VARCHAR, role VARCHAR);INSERT INTO australia_schema.australian_mines (id, name, gender, role) VALUES (1, 'S worker', 'Female', 'Engineer'), (2, 'T engineer', 'Male', 'Engineer');", 'sql': "SELECT COUNT(*) FROM australia_schema.australian_mines WHERE gender = 'Female' AND role = 'Engineer';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here are the signatures for Text-to-SQL generation tasks:\n\n**Signature 1**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,\nReason"
), 0), (Example({'sql_prompt': 'What is the average salary of employees in each position?', 'sql_context': "CREATE TABLE Employees (EmployeeID INT, Name VARCHAR(50), Department VARCHAR(50), Position VARCHAR(50), Salary FLOAT); INSERT INTO Employees (EmployeeID, Name, Department, Position, Salary) VALUES (1, 'John Doe', 'IT', 'Developer', 75000.00), (2, 'Jane Smith', 'IT', 'Developer', 80000.00), (3, 'Alice Johnson', 'Marketing', 'Marketing Specialist', 60000.00), (4, 'Bob Brown', 'HR', 'HR Specialist', 65000.00);", 'sql': 'SELECT Position, AVG(Salary) FROM Employees GROUP BY Position;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**1. Signature**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here is the signature for Text-to-SQL generation tasks:\n\n**Signature**\n\nSql Prompt: What is the average salary of employees in each position?\n\nSql Context: CREATE TABLE Employees (EmployeeID INT, Name VARCHAR(50), Department VARCHAR(50), Position VARCHAR(50), Salary FLOAT); INSERT INTO Employees (EmployeeID, Name, Department, Position, Salary) VALUES (1, 'John Doe', 'IT', 'Developer', 75000.00), (2, 'Jane Smith', 'IT', 'Developer', 80000.00), (3, 'Alice Johnson', 'Marketing', 'Marketing Specialist', 60000.00), (4, 'Bob Brown', 'HR', 'HR Specialist', 65000."
), 1), (Example({'sql_prompt': 'What are the names and ranks of all military personnel in country W who were demoted in the year 2019?', 'sql_context': "CREATE TABLE military_demotions (id INT, name TEXT, country TEXT, rank TEXT, demotion_year INT);INSERT INTO military_demotions (id, name, country, rank, demotion_year) VALUES (1, 'John Doe', 'Country W', 'Colonel', 2019);", 'sql': "SELECT name, rank FROM military_demotions WHERE country = 'Country W' AND demotion_year = 2019;"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here are the signatures for Text-to-SQL generation tasks:\n\n**Signature 1**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,\nReason"
), 0), (Example({'sql_prompt': "List the top 2 sectors with the highest donation amounts in the 'Asia' region for the year 2018, ordered by the donation amount in descending order.", 'sql_context': "CREATE TABLE Donors (donor_id INT, donor_name VARCHAR(255), donation_amount INT, sector VARCHAR(255), region VARCHAR(255), donation_date DATE); INSERT INTO Donors (donor_id, donor_name, donation_amount, sector, region, donation_date) VALUES (1, 'DonorA', 100000, 'Health', 'Asia', '2018-01-01');", 'sql': "SELECT sector, SUM(donation_amount) AS total_donation FROM Donors WHERE region = 'Asia' AND donation_date >= '2018-01-01' AND donation_date < '2019-01-01' GROUP BY sector ORDER BY total_donation DESC LIMIT 2;"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here is the signature for Text-to-SQL generation tasks:\n\n**Signature 1**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,\nReason"
), 0), (Example({'sql_prompt': "Display the vendor with the highest average price for 'Salmon' in the 'sales' table.", 'sql_context': "CREATE TABLE sales (id INT PRIMARY KEY, vendor VARCHAR(50), quantity INT, species VARCHAR(50), price DECIMAL(5,2)); INSERT INTO sales (id, vendor, quantity, species, price) VALUES (1, 'Seafood Haven', 20, 'Salmon', 15.99), (2, 'Sea Bounty', 30, 'Tilapia', 9.49), (3, 'Sea Bounty', 15, 'Cod', 14.50), (4, 'Fresh Catch', 25, 'Salmon', 17.99);", 'sql': "SELECT vendor, AVG(price) FROM sales WHERE species = 'Salmon' GROUP BY vendor ORDER BY AVG(price) DESC LIMIT 1;"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**1. Signature**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here is the signature for Text-to-SQL generation tasks:\n\n**Signature**\n\nSql Prompt: Display the vendor with the highest average price for 'Salmon' in the 'sales' table.\n\nSql Context: CREATE TABLE sales (id INT PRIMARY KEY, vendor VARCHAR(50), quantity INT, species VARCHAR(50), price DECIMAL(5,2)); INSERT INTO sales (id, vendor, quantity, species, price) VALUES (1, 'Seafood Haven', 20, 'Salmon', 15.99), (2, 'Sea Bounty', 30, 'Tilapia', 9.49), (3, 'Sea Bounty', 15, 'Cod', 14.50), (4, 'Fresh Catch"
), 1), (Example({'sql_prompt': "Add new military equipment to 'military_equipment' table", 'sql_context': "CREATE TABLE military_equipment (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255), country VARCHAR(255)); INSERT INTO military_equipment (id, name, type, country) VALUES (1, 'M1 Abrams', 'Tank', 'USA');", 'sql': "INSERT INTO military_equipment (id, name, type, country) VALUES (2, 'Leopard 2', 'Tank', 'Germany');"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation task:\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT, tournament",
    sql="Here are the signatures for Text-to-SQL generation task:\n\n**Signature 1**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT, tournament"
), 0), (Example({'sql_prompt': 'Show total number of union members by state', 'sql_context': "CREATE TABLE union_members (id INT, name VARCHAR(50), state VARCHAR(2), city VARCHAR(20), occupation VARCHAR(20)); INSERT INTO union_members (id, name, state, city, occupation) VALUES (1, 'John Doe', 'NY', 'New York', 'Engineer'); INSERT INTO union_members (id, name, state, city, occupation) VALUES (2, 'Jane Smith', 'CA', 'Los Angeles', 'Teacher'); INSERT INTO union_members (id, name, state, city, occupation) VALUES (3, 'Alice Johnson', 'NY', 'Buffalo', 'Nurse');", 'sql': 'SELECT state, COUNT(*) as total_members FROM union_members GROUP BY state;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**1. Signature**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here is the signature for Text-to-SQL generation tasks:\n\n**Signature**\n\nSql Prompt: Show total number of union members by state\n\nSql Context: CREATE TABLE union_members (id INT, name VARCHAR(50), state VARCHAR(2), city VARCHAR(20), occupation VARCHAR(20)); INSERT INTO union_members (id, name, state, city, occupation) VALUES (1, 'John Doe', 'NY', 'New York', 'Engineer'); INSERT INTO union_members (id, name, state, city, occupation) VALUES (2, 'Jane Smith', 'CA', 'Los Angeles', 'Teacher'); INSERT INTO union_members (id, name, state, city, occupation) VALUES (3, 'Alice Johnson', 'NY"
), 1), (Example({'sql_prompt': 'What is the total value of military equipment sales to all countries?', 'sql_context': "CREATE TABLE military_sales (id INT, country VARCHAR, value FLOAT); INSERT INTO military_sales (id, country, value) VALUES (1, 'Canada', 5000000), (2, 'Mexico', 3000000), (3, 'Canada', 7000000);", 'sql': 'SELECT SUM(value) FROM military_sales;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here are the signatures for Text-to-SQL generation tasks:\n\n**Signature 1**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,\nReason"
), 0), (Example({'sql_prompt': 'Identify the top 3 countries with the highest number of social impact projects in 2019.', 'sql_context': "CREATE TABLE countries (id INT, name VARCHAR(255), total_projects INT); INSERT INTO countries (id, name, total_projects) VALUES (1, 'Brazil', 500), (2, 'India', 700), (3, 'South Africa', 350); CREATE TABLE projects_by_country (country VARCHAR(255), project_count INT); INSERT INTO projects_by_country (country, project_count) SELECT country, COUNT(*) FROM projects GROUP BY country;", 'sql': 'SELECT c.name, p.project_count FROM countries c JOIN (SELECT country, COUNT(*) AS project_count FROM projects GROUP BY country ORDER BY project_count DESC LIMIT 3) p ON c.name = p.country;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here is the signature for Text-to-SQL generation tasks:\n\n**Signature 1**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,\nReason"
), 0), (Example({'sql_prompt': 'What is the maximum market price of Terbium in China for 2017?', 'sql_context': 'CREATE TABLE Terbium_Market_Prices (id INT, year INT, country VARCHAR(255), market_price FLOAT);', 'sql': "SELECT MAX(market_price) FROM Terbium_Market_Prices WHERE year = 2017 AND country = 'China';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**1. Signature**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here is the signature for Text-to-SQL generation tasks in the format you requested:\n\n**Signature**\n\nSql Prompt: What is the maximum market price of Terbium in China for 2017?\n\nSql Context: CREATE TABLE Terbium_Market_Prices (id INT, year INT, country VARCHAR(255), market_price FLOAT);\n\nReasoning: Let's think step by step in order to produce the SQL. We need to find the maximum market price of Terbium in China for a specific year, which is 2017. To do this, we can use the MAX function with a WHERE clause that filters the data based on the country and year.\n\nSql: SELECT MAX(market_price) FROM Terbium_Market_Prices"
), 0), (Example({'sql_prompt': 'What is the maximum amount of research grant received by a faculty member in the Arts and Humanities department?', 'sql_context': "CREATE TABLE grants_faculty (id INT, department VARCHAR(50), faculty_name VARCHAR(50), amount DECIMAL(10,2), grant_date DATE); INSERT INTO grants_faculty (id, department, faculty_name, amount, grant_date) VALUES (1, 'Arts and Humanities', 'Grace', 12000.00, '2018-06-10'), (2, 'Arts and Humanities', 'Harry', 18000.00, '2019-12-20'), (3, 'Arts and Humanities', 'Ida', 20000.00, '2020-08-05');", 'sql': "SELECT MAX(amount) FROM grants_faculty WHERE department = 'Arts and Humanities';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here are the signatures for Text-to-SQL generation tasks:\n\n**Signature 1**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,\nReason"
), 0), (Example({'sql_prompt': 'What is the total mass of all space debris in orbit?', 'sql_context': "CREATE TABLE Space_Debris (ID INT, Object_Type VARCHAR(50), Mass FLOAT); INSERT INTO Space_Debris (ID, Object_Type, Mass) VALUES (1, 'Defunct Satellite', 1500.0), (2, 'Rocket Body', 2000.0), (3, 'Fuel Tank', 500.0), (4, 'Nuts and Bolts', 100.0), (5, 'Spent Rocket Stage', 3000.0);", 'sql': 'SELECT SUM(Mass) FROM Space_Debris;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here is the signature for Text-to-SQL generation tasks in the format you requested:\n\n**Signature 1**\nSql Prompt: What is the total mass of all space debris in orbit?\n\nSql Context: CREATE TABLE Space_Debris (ID INT, Object_Type VARCHAR(50), Mass FLOAT); INSERT INTO Space_Debris (ID, Object_Type, Mass) VALUES (1, 'Defunct Satellite', 1500.0), (2, 'Rocket Body', 2000.0), (3, 'Fuel Tank', 500.0), (4, 'Nuts and Bolts', 100.0), (5, 'Spent Rocket Stage', 3000.0);\n\nReasoning: Let's think step by step"
), 1), (Example({'sql_prompt': 'What is the average age of players who play "Racing Simulator 2022"?', 'sql_context': "CREATE TABLE Players (PlayerID INT, PlayerName VARCHAR(50), Game VARCHAR(50), Age INT); INSERT INTO Players (PlayerID, PlayerName, Game, Age) VALUES (1, 'John Doe', 'Racing Simulator 2022', 25), (2, 'Jane Smith', 'Racing Simulator 2022', 30), (3, 'Alice Johnson', 'Shooter Game 2022', 22);", 'sql': "SELECT AVG(Age) FROM Players WHERE Game = 'Racing Simulator 2022';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql='Here is the signature for Text-to-SQL generation tasks:\n\n**Signature 1**\nSql Prompt: What is the average age of players who play "Racing Simulator 2022"?\n\nSql Context: CREATE TABLE Players (PlayerID INT, PlayerName VARCHAR(50), Game VARCHAR(50), Age INT); INSERT INTO Players (PlayerID, PlayerName, Game, Age) VALUES (1, \'John Doe\', \'Racing Simulator 2022\', 25), (2, \'Jane Smith\', \'Racing Simulator 2022\', 30), (3, \'Alice Johnson\', \'Shooter Game 2022\', 22);\n\nReasoning: Let\'s think step by step in order to produce the SQL. We need to'
), 1), (Example({'sql_prompt': 'What is the total revenue generated by concert ticket sales in the US?', 'sql_context': "CREATE TABLE concert_tickets (ticket_id int, venue_id int, ticket_price decimal, timestamp datetime, country varchar(255)); INSERT INTO concert_tickets (ticket_id, venue_id, ticket_price, timestamp, country) VALUES (1, 789, 50.00, '2022-06-01 12:00:00', 'United States');", 'sql': "SELECT SUM(ticket_price) as total_revenue FROM concert_tickets WHERE timestamp BETWEEN '2022-01-01' AND '2022-12-31' AND country = 'United States';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here are the signatures for Text-to-SQL generation tasks in the format you requested:\n\n**Signature 1**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT,"
), 0), (Example({'sql_prompt': "How many cases did attorney 'Jane Doe' handle in total?", 'sql_context': "CREATE TABLE Attorneys (AttorneyID int, Name varchar(50), Specialty varchar(50)); INSERT INTO Attorneys (AttorneyID, Name, Specialty) VALUES (2, 'Jane Doe', 'Civil'); CREATE TABLE Cases (CaseID int, ClientID int, Category varchar(50), AttorneyID int); INSERT INTO Cases (CaseID, ClientID, Category, AttorneyID) VALUES (301, 3, 'Civil', 2);", 'sql': "SELECT COUNT(*) as TotalCases FROM Cases WHERE AttorneyID = (SELECT AttorneyID FROM Attorneys WHERE Name = 'Jane Doe');"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**1. Signature**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here is the rewritten signature in the specified format:\n\n**Signature**\n\nSql Prompt: How many cases did attorney 'Jane Doe' handle in total?\n\nSql Context: CREATE TABLE Attorneys (AttorneyID int, Name varchar(50), Specialty varchar(50)); INSERT INTO Attorneys (AttorneyID, Name, Specialty) VALUES (2, 'Jane Doe', 'Civil'); CREATE TABLE Cases (CaseID int, ClientID int, Category varchar(50), AttorneyID int); INSERT INTO Cases (CaseID, ClientID, Category, AttorneyID) VALUES (301, 3, 'Civil', 2);\n\nReasoning: Let's think step by step in order to produce the SQL. We need to find the total number of cases"
), 1), (Example({'sql_prompt': 'Show the top 3 content categories in Japan with the most posts.', 'sql_context': "CREATE TABLE content_categories (id INT, content_category VARCHAR(255)); CREATE TABLE posts_extended (id INT, content_category_id INT, content TEXT, country VARCHAR(255)); INSERT INTO content_categories (id, content_category) VALUES (1, 'AI'), (2, 'Data Science'), (3, 'Machine Learning'); INSERT INTO posts_extended (id, content_category_id, content, country) VALUES (1, 1, 'Hello', 'Japan'), (2, 1, 'World', 'Japan'), (3, 2, 'AI', 'Japan');", 'sql': "SELECT content_categories.content_category, COUNT(posts_extended.id) AS post_count FROM content_categories JOIN posts_extended ON posts_extended.content_category_id = content_categories.id WHERE posts_extended.country = 'Japan' GROUP BY content_categories.content_category ORDER BY post_count DESC LIMIT 3;"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here is the signature for Text-to-SQL generation tasks:\n\n**Signature 1**\nSql Prompt: Show the top 3 content categories in Japan with the most posts.\nSql Context: CREATE TABLE content_categories (id INT, content_category VARCHAR(255)); CREATE TABLE posts_extended (id INT, content_category_id INT, content TEXT, country VARCHAR(255)); INSERT INTO content_categories (id, content_category) VALUES (1, 'AI'), (2, 'Data Science'), (3, 'Machine Learning'); INSERT INTO posts_extended (id, content_category_id, content, country) VALUES (1, 1, 'Hello', 'Japan'), (2, 1, 'World', 'Japan'), (3, 2, '"
), 0), (Example({'sql_prompt': 'How many defense contracts were signed in each quarter of 2020?', 'sql_context': "CREATE TABLE defense_contracts (contract_id INT, contract_date DATE); INSERT INTO defense_contracts VALUES (1, '2020-03-15'), (2, '2020-06-01'), (3, '2020-09-15');", 'sql': "SELECT TO_CHAR(contract_date, 'YYYY-Q') AS quarter, COUNT(*) FROM defense_contracts WHERE contract_date >= DATE '2020-01-01' AND contract_date < DATE '2021-01-01' GROUP BY quarter;"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation task:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here are the signatures for Text-to-SQL generation task:\n\n**Signature 1**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT, game"
), 0), (Example({'sql_prompt': 'What is the total duration played for each player?', 'sql_context': "CREATE TABLE PlayerGame (PlayerID INT, GameID INT, Played DATE, StartTime TIMESTAMP, EndTime TIMESTAMP); INSERT INTO PlayerGame (PlayerID, GameID, Played, StartTime, EndTime) VALUES (1, 1, '2022-01-01', '2022-01-01 10:00:00', '2022-01-01 12:00:00'), (2, 2, '2022-01-02', '2022-01-02 14:00:00', '2022-01-02 16:00:00'), (3, 1, '2022-01-03', '2022-01-03 10:00:00', '2022-01-03 11:00:00'), (4, 3, '2022-01-04', '2022-01-04 18:00:00', '2022-01-04 19:00:00');", 'sql': 'SELECT PlayerID, SUM(TIMESTAMPDIFF(MINUTE, StartTime, EndTime)) FROM PlayerGame GROUP BY PlayerID;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**1. How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, team_name VARCHAR(50)); CREATE TABLE games (game_id INT, game_date DATE); CREATE TABLE yellow_cards (card_id INT, player_id INT, game_id INT);\nReasoning: Let's think step by step in order to generate the SQL query. We need to join the `teams`, `games`, and `yellow_cards` tables on their respective IDs to get the count of",
    sql="Here are the signatures for Text-to-SQL generation tasks:\n\n**1. How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\n\nSql Context: CREATE TABLE teams (team_id INT, team_name VARCHAR(50)); CREATE TABLE games (game_id INT, game_date DATE); CREATE TABLE yellow_cards (card_id INT, player_id INT, game_id INT);\n\nReasoning: Let's think step by step in order to generate the SQL query. We need to join the `teams`, `games`, and `yellow_cards` tables on their respective IDs to get the count of yellow"
), 0), (Example({'sql_prompt': 'Find the percentage change in tourism to Thailand between 2019 and 2021.', 'sql_context': 'CREATE TABLE thailand_tourism (year INT, total_visitors INT); INSERT INTO thailand_tourism (year, total_visitors) VALUES (2019, 40000), (2021, 30000);', 'sql': 'SELECT (30000 - 40000) * 100.0 / 40000 AS change_percentage FROM thailand_tourism WHERE year = 2021;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here is the completed signature:\n\n---\n\nSql Prompt: Find the percentage change in tourism to Thailand between 2019 and 2021.\n\nSql Context: CREATE TABLE thailand_tourism (year INT, total_visitors INT); INSERT INTO thailand_tourism (year, total_visitors) VALUES (2019, 40000), (2021, 30000);\n\nReasoning: Let's think step by step in order to calculate the percentage change. First, we need to find the difference between the number of visitors in 2021 and 2019. Then, we divide this difference by the initial value (number of visitors in 2019) and multiply by 100 to get the percentage change.",
    sql='SELECT (('
), 0), (Example({'sql_prompt': 'How many students with physical disabilities have not received any accommodations in the last year?', 'sql_context': 'CREATE TABLE Accommodations (id INT, student VARCHAR(255), date DATE); CREATE TABLE Students (id INT, name VARCHAR(255), age INT, disability VARCHAR(255));', 'sql': "SELECT COUNT(*) FROM Students LEFT JOIN Accommodations ON Students.id = Accommodations.student WHERE disability = 'physical disability' AND date IS NULL;"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here is the completed signature:\n\n---\n\nSignature for Text to SQL generation task.\n\nSql Prompt: How many students with physical disabilities have not received any accommodations in the last year?\n\nSql Context: CREATE TABLE Accommodations (id INT, student VARCHAR(255), date DATE); CREATE TABLE Students (id INT, name VARCHAR(255), age INT, disability VARCHAR(255));\n\nReasoning: Let's think step by step in order to ${produce the sql}. We need to identify students with physical disabilities and then count those who have not received any accommodations in the last year. To do this, we can use a subquery to filter out students who have received accommodations within the last year.",
    sql="SELECT COUNT(*) FROM Students WHERE disability = 'Physical'"
), 0), (Example({'sql_prompt': 'What is the maximum property price in neighborhoods with inclusive housing policies, and the minimum size of properties in those neighborhoods?', 'sql_context': "CREATE TABLE property (id INT, price INT, size_sqft INT, area VARCHAR(255), has_inclusive_policy BOOLEAN); INSERT INTO property (id, price, size_sqft, area, has_inclusive_policy) VALUES (1, 500000, 1500, 'urban', true), (2, 400000, 1200, 'urban', false);", 'sql': "SELECT MAX(price), MIN(size_sqft) FROM property WHERE area = 'urban' AND has_inclusive_policy = true;"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here is the signature for Text-to-SQL generation tasks in the format you requested:\n\n**Signature 1**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\n\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT,"
), 0), (Example({'sql_prompt': "Add a new safety incident to the safety_incidents table (id: 4, aircraft: 'Space Shuttle Challenger', date: '1986-01-28', description: 'O-ring failure')", 'sql_context': 'CREATE TABLE safety_incidents (id INT, aircraft VARCHAR(255), date DATE, description VARCHAR(255));', 'sql': "INSERT INTO safety_incidents (id, aircraft, date, description) VALUES (4, 'Space Shuttle Challenger', '1986-01-28', 'O-ring failure');"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation task:\n\n---\n\n**1. How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3",
    sql="Here is the signature for Text-to-SQL generation task:\n\n**1. How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3,"
), 0), (Example({'sql_prompt': "What is the average age of players who prefer the 'FPS' genre in the 'player_preferences' and 'player_demographics' tables?", 'sql_context': "CREATE TABLE player_preferences (player_id INT, genre VARCHAR(50)); CREATE TABLE player_demographics (player_id INT, age INT); INSERT INTO player_preferences (player_id, genre) VALUES (1, 'FPS'), (2, 'RPG'), (3, 'FPS'), (4, 'Simulation'); INSERT INTO player_demographics (player_id, age) VALUES (1, 25), (2, 30), (3, 35), (4, 40);", 'sql': "SELECT AVG(age) as avg_fps_age FROM player_demographics JOIN player_preferences ON player_preferences.player_id = player_demographics.player_id WHERE genre = 'FPS';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here are the signatures for Text-to-SQL generation tasks:\n\n**Signature 1**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,\nReason"
), 0), (Example({'sql_prompt': 'What is the diversity ratio (percentage of non-male employees) in each department?', 'sql_context': "CREATE TABLE Employees (EmployeeID int, Department varchar(20), Gender varchar(10)); INSERT INTO Employees (EmployeeID, Department, Gender) VALUES (1, 'Marketing', 'Male'); INSERT INTO Employees (EmployeeID, Department, Gender) VALUES (2, 'Marketing', 'Female'); INSERT INTO Employees (EmployeeID, Department, Gender) VALUES (3, 'IT', 'Male'); INSERT INTO Employees (EmployeeID, Department, Gender) VALUES (4, 'IT', 'Non-binary');", 'sql': "SELECT Department, (COUNT(CASE WHEN Gender <> 'Male' THEN 1 END) / COUNT(*)) * 100 AS DiversityRatio FROM Employees GROUP BY Department;"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**1. Signature**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here is the signature for Text-to-SQL generation tasks:\n\n**Signature**\n\nSql Prompt: What is the diversity ratio (percentage of non-male employees) in each department?\n\nSql Context: CREATE TABLE Employees (EmployeeID int, Department varchar(20), Gender varchar(10)); INSERT INTO Employees (EmployeeID, Department, Gender) VALUES (1, 'Marketing', 'Male'); INSERT INTO Employees (EmployeeID, Department, Gender) VALUES (2, 'Marketing', 'Female'); INSERT INTO Employees (EmployeeID, Department, Gender) VALUES (3, 'IT', 'Male'); INSERT INTO Employees (EmployeeID, Department, Gender) VALUES (4, 'IT', 'Non-binary');\n\nReasoning: Let's think step by step"
), 1), (Example({'sql_prompt': 'What is the average donation per donor in India?', 'sql_context': "CREATE TABLE donations (donor_id INT, donation_amount DECIMAL(10, 2), donation_date DATE, country TEXT); INSERT INTO donations VALUES (1, 50.00, '2021-05-15', 'India'), (2, 100.00, '2021-06-10', 'India'), (3, 25.00, '2021-04-01', 'India');", 'sql': "SELECT AVG(donation_amount) FROM donations WHERE country = 'India';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here are the signatures for Text-to-SQL generation tasks:\n\n**Signature 1**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,\nReason"
), 0), (Example({'sql_prompt': 'How many wildlife habitats in South Africa have a total area greater than 50000 hectares?', 'sql_context': 'CREATE TABLE wildlife_habitats (id INT, name TEXT, area REAL, country TEXT);', 'sql': "SELECT COUNT(*) FROM wildlife_habitats WHERE country = 'South Africa' GROUP BY country HAVING SUM(area) > 50000;"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here is the completed signature:\n\n---\n\nSignature for Text to SQL generation task.\n\n---\n\nSql Prompt: How many wildlife habitats in South Africa have a total area greater than 50000 hectares?\n\nSql Context: CREATE TABLE wildlife_habitats (id INT, name TEXT, area REAL, country TEXT);\n\nReasoning: Let's think step by step in order to ${produce the sql}. We need to filter the wildlife habitats that are located in South Africa and then count those with an area greater than 50000 hectares. We can use a WHERE clause to filter the data based on the country and area conditions.",
    sql="SELECT COUNT(*) FROM wildlife_habitats WHERE country = 'South Africa' AND area > 50000;\n\n---\n\nLet me know if"
), 0), (Example({'sql_prompt': 'What is the percentage of faculty members who identify as AAPI in the School of Business?', 'sql_context': "CREATE TABLE faculty_members (id INT, faculty_name VARCHAR(50), faculty_department VARCHAR(50), faculty_race VARCHAR(20)); INSERT INTO faculty_members (id, faculty_name, faculty_department, faculty_race) VALUES (1, 'Taylor Smith', 'Business Administration', 'AAPI'), (2, 'James Johnson', 'Marketing', 'White'), (3, 'Avery Brown', 'Finance', 'Black'), (4, 'Katie Davis', 'Management', 'White'), (5, 'Jamie Wilson', 'Accounting', 'Latinx'), (6, 'Leah Kim', 'Business Analytics', 'AAPI');", 'sql': "SELECT (COUNT(*) FILTER (WHERE faculty_race = 'AAPI')) * 100.0 / COUNT(*) FROM faculty_members WHERE faculty_department LIKE '%Business%';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here are the signatures for Text-to-SQL generation tasks:\n\n**Signature 1**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,\nReason"
), 0), (Example({'sql_prompt': 'How many water treatment plants are there in the province of Ontario, Canada?', 'sql_context': "CREATE TABLE water_treatment_plants_ontario (id INT, province VARCHAR); INSERT INTO water_treatment_plants_ontario (id, province) VALUES (1, 'Ontario'), (2, 'Quebec'), (3, 'Ontario'), (4, 'British Columbia');", 'sql': "SELECT COUNT(*) FROM water_treatment_plants_ontario WHERE province = 'Ontario';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation task:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here are the signatures for Text-to-SQL generation task:\n\n**Signature 1**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,\nReason"
), 0), (Example({'sql_prompt': 'Delete vessels that have not been inspected in the last 12 months', 'sql_context': "CREATE TABLE vessel_inspection (vessel_id INT, inspection_date DATE); INSERT INTO vessel_inspection (vessel_id, inspection_date) VALUES (1, '2020-01-01'), (2, '2021-06-15'), (3, '2019-12-20');", 'sql': 'DELETE FROM vessel_inspection WHERE vessel_id IN (SELECT vessel_id FROM vessel_inspection WHERE inspection_date < DATE_SUB(CURDATE(), INTERVAL 12 MONTH));'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation task:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here are the signatures for Text-to-SQL generation task:\n\n**Signature 1**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,\nReason"
), 0), (Example({'sql_prompt': "Which materials in the 'inventory' table have a quantity of at least 100 and are not used in the production of any product in the 'products' table?", 'sql_context': "CREATE TABLE inventory(id INT, material VARCHAR(255), quantity INT); CREATE TABLE products(id INT, material VARCHAR(255), quantity INT); INSERT INTO inventory(id, material, quantity) VALUES (1, 'organic cotton', 75), (2, 'conventional cotton', 100), (3, 'organic cotton', 30), (4, 'hemp', 60); INSERT INTO products(id, material, quantity) VALUES (1, 'organic cotton', 150), (2, 'conventional cotton', 200), (3, 'hemp', 100);", 'sql': 'SELECT material FROM inventory i WHERE quantity >= 100 AND NOT EXISTS (SELECT * FROM products p WHERE i.material = p.material);'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE matches (match_id INT, team_id INT,",
    sql="Here are the signatures for Text-to-SQL generation tasks:\n\n**Signature 1**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE matches (match_id INT, team_id INT,\nReason"
), 0), (Example({'sql_prompt': "What is the minimum billing amount for cases in the region 'South'?", 'sql_context': 'CREATE TABLE cases (case_id INT, region TEXT, billing_amount INT);', 'sql': "SELECT MIN(billing_amount) FROM cases WHERE region = 'South';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**1. Signature**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here is the signature for Text-to-SQL generation tasks:\n\n**Signature**\n\nSql Prompt: What is the minimum billing amount for cases in the region 'South'?\n\nSql Context: CREATE TABLE cases (case_id INT, region TEXT, billing_amount INT);\n\nReasoning: Let's think step by step in order to produce the SQL. We need to join the `cases` table with itself to find the minimum billing amount for cases in the region 'South'. We can use a subquery or a self-join to achieve this.\n\nSql: SELECT MIN(billing_amount) FROM cases WHERE region = 'South';"
), 1), (Example({'sql_prompt': 'What is the total number of postpaid and prepaid mobile subscribers in each region?', 'sql_context': "CREATE TABLE mobile_subscribers (subscriber_id INT, subscriber_type VARCHAR(10), region VARCHAR(20)); INSERT INTO mobile_subscribers (subscriber_id, subscriber_type, region) VALUES (1, 'postpaid', 'West'), (2, 'prepaid', 'East'), (3, 'postpaid', 'North'), (4, 'prepaid', 'South'), (5, 'postpaid', 'East');", 'sql': 'SELECT region, COUNT(*) as total_subscribers FROM mobile_subscribers GROUP BY region;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**1. Signature**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here is the signature for Text-to-SQL generation tasks in the format you requested:\n\n**Signature**\n\nSql Prompt: What is the total number of postpaid and prepaid mobile subscribers in each region?\n\nSql Context: CREATE TABLE mobile_subscribers (subscriber_id INT, subscriber_type VARCHAR(10), region VARCHAR(20)); INSERT INTO mobile_subscribers (subscriber_id, subscriber_type, region) VALUES (1, 'postpaid', 'West'), (2, 'prepaid', 'East'), (3, 'postpaid', 'North'), (4, 'prepaid', 'South'), (5, 'postpaid', 'East');\n\nReasoning: Let's think step by step in order to produce the SQL. We need to group the mobile"
), 1), (Example({'sql_prompt': 'Identify the top 3 mining companies with the highest total production of Praseodymium in 2021 and their respective production amounts.', 'sql_context': "CREATE TABLE Company (Name TEXT, Location TEXT, Established INT); INSERT INTO Company (Name, Location, Established) VALUES ('Delta Minerals', 'Brazil', 2000), ('Epsilon Ore', 'South Africa', 2010), ('Zeta Extraction', 'Canada', 2005), ('Eta Mines', 'Russia', 2008); CREATE TABLE ProductionCompany (Year INT, Company TEXT, Element TEXT, Quantity INT); INSERT INTO ProductionCompany (Year, Company, Element, Quantity) VALUES (2021, 'Delta Minerals', 'Praseodymium', 1000), (2021, 'Epsilon Ore', 'Praseodymium', 1400), (2021, 'Zeta Extraction', 'Praseodymium', 1800), (2021, 'Eta Mines', 'Praseodymium', 1100);", 'sql': "SELECT Company, SUM(Quantity) FROM ProductionCompany WHERE Element = 'Praseodymium' AND Year = 2021 GROUP BY Company ORDER BY SUM(Quantity) DESC FETCH FIRST 3 ROWS ONLY;"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, year INT, count INT); INSERT INTO yellow_cards (card_id, team_id, year, count) VALUES (1, 1, 2020, 5), (2, 1, 2020, 3), ...; \nReasoning: Let's",
    sql="Here are the signatures for Text-to-SQL generation tasks:\n\n**Signature 1**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, year INT, count INT); INSERT INTO yellow_cards (card_id, team_id, year, count) VALUES (1, 1, 2020, 5), (2, 1, 2020, 3), ...;\nReasoning: Let's think step"
), 0), (Example({'sql_prompt': 'How many volunteer hours were recorded for each program in Q2 2021?', 'sql_context': "CREATE TABLE VolunteerHours (VolunteerID INT, ProgramID INT, Hours DECIMAL(5,2), HourDate DATE); INSERT INTO VolunteerHours (VolunteerID, ProgramID, Hours, HourDate) VALUES (1, 1, 5, '2021-04-15'), (2, 2, 3, '2021-06-02'), (1, 1, 4, '2021-05-31'), (3, 3, 2, '2021-04-01'); CREATE TABLE Programs (ProgramID INT, ProgramName TEXT); INSERT INTO Programs (ProgramID, ProgramName) VALUES (1, 'Arts & Culture'), (2, 'Health & Wellness'), (3, 'Environment');", 'sql': "SELECT ProgramID, SUM(Hours) as TotalHours FROM VolunteerHours WHERE HourDate BETWEEN '2021-04-01' AND '2021-06-30' GROUP BY ProgramID;"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 5), (2, 1, 3); CREATE TABLE matches (match_id INT, team_id INT, date DATE); INSERT INTO matches (match_id",
    sql="Here are the signatures for Text-to-SQL generation tasks:\n\n**Signature 1**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 5), (2, 1, 3); CREATE TABLE matches (match_id INT, team_id INT, date DATE); INSERT INTO matches (match_id,"
), 0), (Example({'sql_prompt': 'What is the maximum production capacity of the chemical manufacturing plants located in Canada?', 'sql_context': "CREATE TABLE chemical_plants (id INT, plant_name VARCHAR(100), country VARCHAR(50), production_capacity INT); INSERT INTO chemical_plants (id, plant_name, country, production_capacity) VALUES (1, 'Canada Plant 1', 'Canada', 5000), (2, 'Canada Plant 2', 'Canada', 7000);", 'sql': "SELECT MAX(production_capacity) FROM chemical_plants WHERE country = 'Canada';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here are the signatures for Text-to-SQL generation tasks in the format you requested:\n\n**Signature 1**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT,"
), 0), (Example({'sql_prompt': 'Who is the oldest artist from the United States?', 'sql_context': "CREATE TABLE artists (id INT, name VARCHAR(255), age INT, country VARCHAR(255)); INSERT INTO artists (id, name, age, country) VALUES (1, 'Bruce Springsteen', 72, 'United States'), (2, 'Beyoncé', 40, 'United States');", 'sql': "SELECT name, MAX(age) FROM artists WHERE country = 'United States';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here are the signatures for Text-to-SQL generation tasks in the format you requested:\n\n**Signature 1**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT,"
), 0), (Example({'sql_prompt': 'Find the average height of basketball players in the NBA, categorized by their position.', 'sql_context': 'CREATE TABLE nba_players_height (id INT, player_id INT, height_feet INT, height_inches INT); CREATE TABLE nba_players (id INT, name VARCHAR(100), team VARCHAR(50), position VARCHAR(50));', 'sql': 'SELECT position, AVG(height_feet + height_inches / 12) as avg_height FROM nba_players_height JOIN nba_players ON nba_players_height.player_id = nba_players.id GROUP BY position;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation task:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here is the signature for Text-to-SQL generation task:\n\n**Signature 1**\nSql Prompt: Find the average height of basketball players in the NBA, categorized by their position.\n\nSql Context: CREATE TABLE nba_players_height (id INT, player_id INT, height_feet INT, height_inches INT); CREATE TABLE nba_players (id INT, name VARCHAR(100), team VARCHAR(50), position VARCHAR(50));\n\nReasoning: Let's think step by step in order to produce the SQL. We need to join the two tables `nba_players_height` and `nba_players` on the `player_id` column. Then, we can use the `AVG` function to calculate the average height for each position. Finally"
), 1), (Example({'sql_prompt': 'Identify all suppliers who provide non-GMO ingredients to restaurants with Michelin stars.', 'sql_context': 'CREATE TABLE Suppliers (id INT, name VARCHAR(50), isNonGMO BOOLEAN); CREATE TABLE Restaurants (id INT, name VARCHAR(50), numStars INT); CREATE TABLE Ingredients (supplierId INT, restaurantId INT, isNonGMO BOOLEAN);', 'sql': 'SELECT Suppliers.name FROM Suppliers INNER JOIN Ingredients ON Suppliers.id = Ingredients.supplierId INNER JOIN Restaurants ON Ingredients.restaurantId = Restaurants.id WHERE Restaurants.numStars > 2 AND Ingredients.isNonGMO = TRUE;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation task:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here is the signature for Text-to-SQL generation task:\n\n**Signature 1**\nSql Prompt: Identify all suppliers who provide non-GMO ingredients to restaurants with Michelin stars.\nSql Context: CREATE TABLE Suppliers (id INT, name VARCHAR(50), isNonGMO BOOLEAN); CREATE TABLE Restaurants (id INT, name VARCHAR(50), numStars INT); CREATE TABLE Ingredients (supplierId INT, restaurantId INT, isNonGMO BOOLEAN);\nReasoning: Let's think step by step in order to produce the SQL. We need to join the Suppliers and Ingredients tables on supplierId, then join the result with Restaurants table on restaurantId, and finally filter the results based on isNonGMO being TRUE and numStars greater than"
), 1), (Example({'sql_prompt': 'How many licenses were issued in each state as of 2022-01-01?', 'sql_context': "CREATE TABLE Licenses (id INT, state TEXT, issued_date DATE); INSERT INTO Licenses (id, state, issued_date) VALUES (1, 'California', '2021-01-01'), (2, 'Oregon', '2021-01-01'), (3, 'Washington', '2021-01-01');", 'sql': "SELECT state, COUNT(*) AS num_licenses FROM Licenses WHERE issued_date <= '2022-01-01' GROUP BY state;"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here is the signature for Text-to-SQL generation tasks in the format you requested:\n\n**Signature 1**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT,"
), 0), (Example({'sql_prompt': 'What is the number of smart city initiatives implemented in each country?', 'sql_context': "CREATE TABLE smart_city_initiatives (initiative_id INT, country VARCHAR(50), city VARCHAR(100), status VARCHAR(50)); INSERT INTO smart_city_initiatives (initiative_id, country, city, status) VALUES (1, 'France', 'Paris', 'Implemented');", 'sql': "SELECT country, COUNT(*) as implemented_initiatives FROM smart_city_initiatives WHERE status = 'Implemented' GROUP BY country;"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here is the completed signature:\n\n---\n\nSql Prompt: What is the number of smart city initiatives implemented in each country?\n\nSql Context: CREATE TABLE smart_city_initiatives (initiative_id INT, country VARCHAR(50), city VARCHAR(100), status VARCHAR(50)); INSERT INTO smart_city_initiatives (initiative_id, country, city, status) VALUES (1, 'France', 'Paris', 'Implemented');\n\nReasoning: Let's think step by step in order to ${group the initiatives by country and count the number of implemented initiatives}. We need to join the table with itself to get the count for each country. Then we can use a GROUP BY clause to group the results by country.",
    sql='SELECT country, COUNT(*) AS'
), 0), (Example({'sql_prompt': "How many tickets were sold for each team's away games in Q2 of 2022?", 'sql_context': "CREATE TABLE teams (id INT, name VARCHAR(255)); INSERT INTO teams (id, name) VALUES (1, 'TeamA'), (2, 'TeamB'), (3, 'TeamC'); CREATE TABLE games (id INT, home_team_id INT, away_team_id INT, home_team_score INT, away_team_score INT, price DECIMAL(5,2), game_date DATE); CREATE VIEW away_games AS SELECT id, away_team_id, price, game_date FROM games;", 'sql': "SELECT t.name, COUNT(*) as tickets_sold FROM away_games h JOIN teams t ON h.away_team_id = t.id WHERE h.game_date BETWEEN '2022-04-01' AND '2022-06-30' GROUP BY t.name;"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**1. How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3",
    sql="Here are the signatures for Text-to-SQL generation tasks:\n\n**1. How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\n\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3,"
), 0), (Example({'sql_prompt': 'Show the names of companies that produced any Rare Earth elements in both 2015 and 2020.', 'sql_context': 'CREATE TABLE Producers (ProducerID INT PRIMARY KEY, Name TEXT, ProductionYear INT, RareEarth TEXT, Quantity INT);', 'sql': 'SELECT DISTINCT Name FROM Producers p1 JOIN Producers p2 ON p1.Name = p2.Name WHERE p1.ProductionYear = 2015 AND p2.ProductionYear = 2020;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation task:\n\n---\n\n**1. How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3",
    sql="Here is the signature for Text-to-SQL generation task:\n\n**1. How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3,"
), 0), (Example({'sql_prompt': 'What is the total CO2 emissions of silk production in China?', 'sql_context': 'CREATE TABLE SilkProduction (id INT, country VARCHAR, co2_emissions INT);', 'sql': "SELECT SUM(co2_emissions) FROM SilkProduction WHERE country = 'China';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**1. Signature**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql='Here is the signature for Text-to-SQL generation tasks:\n\n**Signature**\n\nSql Prompt: Natural language query\n\nSql Context: Context for the query\n\nReasoning: Let\'s think step by step in order to ${produce the sql}. We ...\n\nSql: SQL query\n\n---\n\nExample Signatures:\n\n1. **Signature**\nSql Prompt: What is the total CO2 emissions of silk production in China?\nSql Context: CREATE TABLE SilkProduction (id INT, country VARCHAR, co2_emissions INT);\nReasoning: Let\'s think step by step in order to produce the sql. We need to filter the table for "China" and sum up the co2_emissions.\nSql: SELECT SUM(co2_emissions) FROM SilkProduction WHERE country ='
), 0), (Example({'sql_prompt': 'What is the total number of AI models developed in North America with an explainability score below 70?', 'sql_context': "CREATE TABLE na_models (model_name TEXT, region TEXT, explainability_score INTEGER); INSERT INTO na_models (model_name, region, explainability_score) VALUES ('Model1', 'North America', 75), ('Model2', 'North America', 65), ('Model3', 'North America', 80);", 'sql': "SELECT SUM(incident_count) FROM na_models WHERE region = 'North America' AND explainability_score < 70;"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here are the signatures for Text-to-SQL generation tasks:\n\n**Signature 1**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,\nReason"
), 0), (Example({'sql_prompt': 'Which mobile and broadband subscribers have not used their services in the last 30 days?', 'sql_context': "CREATE TABLE mobile_usage (customer_id INT, last_usage DATE); CREATE TABLE broadband_usage (customer_id INT, last_usage DATE); INSERT INTO mobile_usage (customer_id, last_usage) VALUES (1, '2022-01-01'), (2, '2022-02-01'); INSERT INTO broadband_usage (customer_id, last_usage) VALUES (1, '2022-01-15'), (3, '2022-02-10');", 'sql': 'SELECT customer_id FROM mobile_usage WHERE last_usage < NOW() - INTERVAL 30 DAY UNION SELECT customer_id FROM broadband_usage WHERE last_usage < NOW() - INTERVAL 30 DAY;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here is the signature for Text-to-SQL generation tasks:\n\n**Signature 1**\nSql Prompt: Which mobile and broadband subscribers have not used their services in the last 30 days?\n\nSql Context: CREATE TABLE mobile_usage (customer_id INT, last_usage DATE); CREATE TABLE broadband_usage (customer_id INT, last_usage DATE); INSERT INTO mobile_usage (customer_id, last_usage) VALUES (1, '2022-01-01'), (2, '2022-02-01'); INSERT INTO broadband_usage (customer_id, last_usage) VALUES (1, '2022-01-15'), (3, '2022-02-10');\n\nReasoning: Let's think step by step in order to produce the SQL."
), 1), (Example({'sql_prompt': 'What is the total number of grants given per city?', 'sql_context': 'CREATE TABLE Nonprofits (NonprofitID INT, Name VARCHAR(50), City VARCHAR(50), State VARCHAR(2), Zip VARCHAR(10), MissionStatement TEXT); CREATE TABLE Grants (GrantID INT, DonorID INT, NonprofitID INT, GrantAmount DECIMAL(10,2), Date DATE); CREATE TABLE Donors (DonorID INT, Name VARCHAR(50), City VARCHAR(50), State VARCHAR(2), Zip VARCHAR(10), DonationAmount DECIMAL(10,2));', 'sql': 'SELECT City, COUNT(*) FROM Grants G INNER JOIN Nonprofits N ON G.NonprofitID = N.NonprofitID GROUP BY City;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**1. How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3",
    sql='Here is the signature for Text-to-SQL generation tasks:\n\n**1. What is the total number of grants given per city?**\n\nSql Prompt: What is the total number of grants given per city?\n\nSql Context: CREATE TABLE Nonprofits (NonprofitID INT, Name VARCHAR(50), City VARCHAR(50), State VARCHAR(2), Zip VARCHAR(10), MissionStatement TEXT); CREATE TABLE Grants (GrantID INT, DonorID INT, NonprofitID INT, GrantAmount DECIMAL(10,2), Date DATE); CREATE TABLE Donors (DonorID INT, Name VARCHAR(50), City VARCHAR(50), State VARCHAR(2), Zip VARCHAR(10), DonationAmount DECIMAL(10,2));\n\nReasoning:'
), 0), (Example({'sql_prompt': 'Show the average soil moisture level for each field in the past week', 'sql_context': 'CREATE TABLE field (id INT, name VARCHAR(255), farm_id INT);CREATE TABLE soil_moisture (id INT, field_id INT, measurement DATE, level INT);', 'sql': 'SELECT field_id, AVG(level) FROM soil_moisture WHERE measurement >= DATEADD(day, -7, GETDATE()) GROUP BY field_id;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation task:\n\n---\n\n**1. How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3",
    sql="Here are the signatures for Text-to-SQL generation task:\n\n**1. How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3,"
), 0), (Example({'sql_prompt': 'What is the total number of satellites deployed by SpaceComm in the Middle East?', 'sql_context': 'CREATE TABLE SatelliteDeployment (satellite_id INT, company VARCHAR(255), region VARCHAR(255));', 'sql': "SELECT COUNT(*) FROM SatelliteDeployment WHERE company = 'SpaceComm' AND region = 'Middle East';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**1. Signature**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here is the signature for Text-to-SQL generation task:\n\n**Signature**\n\nSql Prompt: What is the total number of satellites deployed by SpaceComm in the Middle East?\n\nSql Context: CREATE TABLE SatelliteDeployment (satellite_id INT, company VARCHAR(255), region VARCHAR(255));\n\nReasoning: Let's think step by step in order to produce the SQL. We need to join the `SatelliteDeployment` table with itself to count the number of satellites deployed by SpaceComm in the Middle East. Here are the steps:\n\n1. Filter the rows where the company is 'SpaceComm'.\n2. Filter the rows where the region is 'Middle East'.\n3. Count the number of rows that satisfy both conditions.\n\nSql: SELECT COUNT(*) FROM"
), 1), (Example({'sql_prompt': 'What is the total number of tickets sold for performances with a rating of 5?', 'sql_context': "CREATE TABLE performance (id INT PRIMARY KEY, name VARCHAR(255), date DATE, artist_id INT, rating INT); INSERT INTO performance (id, name, date, artist_id, rating) VALUES (1, 'Dance Recital', '2022-03-01', 1, 5);", 'sql': 'SELECT SUM(t.quantity) as total_tickets_sold FROM performance p INNER JOIN ticket t ON p.id = t.performance_id WHERE p.rating = 5;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT, tournament",
    sql="Here is the signature for Text-to-SQL generation tasks:\n\n**Signature 1**\nSql Prompt: What is the total number of tickets sold for performances with a rating of 5?\n\nSql Context: CREATE TABLE performance (id INT PRIMARY KEY, name VARCHAR(255), date DATE, artist_id INT, rating INT); INSERT INTO performance (id, name, date, artist_id, rating) VALUES (1, 'Dance Recital', '2022-03-01', 1, 5);\n\nReasoning: Let's think step by step in order to produce the SQL. We need to join the `performance` table with itself to count the number of tickets sold for performances with a rating of 5. Here are the steps"
), 0), (Example({'sql_prompt': 'What is the average emergency response time by region for fire incidents?', 'sql_context': 'CREATE TABLE Regions (RegionID INT, RegionName VARCHAR(255)); CREATE TABLE Incidents (IncidentID INT, IncidentType VARCHAR(255), RegionID INT, ResponseTime INT);', 'sql': "SELECT AVG(ResponseTime) as AvgResponseTime, RegionName FROM Incidents i JOIN Regions r ON i.RegionID = r.RegionID WHERE IncidentType = 'Fire' GROUP BY RegionName;"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**1. Signature**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here is the signature for Text-to-SQL generation tasks:\n\n**Signature**\n\nSql Prompt: What is the average emergency response time by region for fire incidents?\n\nSql Context: CREATE TABLE Regions (RegionID INT, RegionName VARCHAR(255)); CREATE TABLE Incidents (IncidentID INT, IncidentType VARCHAR(255), RegionID INT, ResponseTime INT);\n\nReasoning: Let's think step by step in order to produce the SQL. We need to join the `Regions` and `Incidents` tables on `RegionID`, then group the results by `RegionName` and calculate the average `ResponseTime`."
), 1), (Example({'sql_prompt': "What is the average revenue of virtual tours in 'Spain'?", 'sql_context': "CREATE TABLE virtual_tours (id INT, name TEXT, country TEXT, revenue FLOAT); INSERT INTO virtual_tours (id, name, country, revenue) VALUES (1, 'Virtual Barcelona Tour', 'Spain', 2000);", 'sql': "SELECT AVG(revenue) FROM virtual_tours WHERE country = 'Spain';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation task:\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT, tournament",
    sql="Here are the signatures for Text-to-SQL generation task:\n\n**Signature 1**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT, tournament"
), 0), (Example({'sql_prompt': 'What is the total number of students and staff with accommodations in the "disability_services" schema, excluding the "accessibility_parking" type?', 'sql_context': 'CREATE SCHEMA disability_services; CREATE TABLE staff (id INT, name VARCHAR(50), accommodation VARCHAR(50)); CREATE TABLE students (id INT, name VARCHAR(50), accommodation VARCHAR(50));', 'sql': "SELECT COUNT(*) FROM disability_services.staff WHERE accommodation != 'accessibility_parking' UNION SELECT COUNT(*) FROM disability_services.students WHERE accommodation != 'accessibility_parking';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql='Here is the signature for Text-to-SQL generation task:\n\n**Signature 1**\nSql Prompt: What is the total number of students and staff with accommodations in the "disability_services" schema, excluding the "accessibility_parking" type?\n\nSql Context: CREATE SCHEMA disability_services; CREATE TABLE staff (id INT, name VARCHAR(50), accommodation VARCHAR(50)); CREATE TABLE students (id INT, name VARCHAR(50), accommodation VARCHAR(50));\n\nReasoning: Let\'s think step by step in order to produce the SQL. We need to join the `staff` and `students` tables based on their accommodations, excluding the "accessibility_parking" type. Then, we can use a COUNT function to get the total number'
), 1), (Example({'sql_prompt': 'What is the number of electric trams in service in Istanbul in 2021?', 'sql_context': "CREATE TABLE electric_trams (tram_id INT, service_date DATE, in_service INT); INSERT INTO electric_trams (tram_id, service_date, in_service) VALUES (1, '2021-01-01', 1), (2, '2021-01-02', 1), (3, '2021-01-03', 0);", 'sql': "SELECT COUNT(*) FROM electric_trams WHERE in_service = 1 AND service_date BETWEEN '2021-01-01' AND '2021-12-31';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT, tournament",
    sql="Here is the signature for Text-to-SQL generation tasks:\n\n**Signature 1**\nSql Prompt: What is the number of electric trams in service in Istanbul in 2021?\n\nSql Context: CREATE TABLE electric_trams (tram_id INT, service_date DATE, in_service INT); INSERT INTO electric_trams (tram_id, service_date, in_service) VALUES (1, '2021-01-01', 1), (2, '2021-01-02', 1), (3, '2021-01-03', 0);\n\nReasoning: Let's think step by step in order to produce the SQL. We need to filter the electric trams that are in service and have a service date of"
), 0), (Example({'sql_prompt': "What is the total number of trips taken on accessible vehicles in the 'East' region for the current year?", 'sql_context': "CREATE TABLE Vehicles (VehicleID int, VehicleType varchar(255), Region varchar(255)); INSERT INTO Vehicles (VehicleID, VehicleType, Region) VALUES (1, 'Bus', 'East'), (2, 'Tram', 'West'), (3, 'Wheelchair Bus', 'South'), (4, 'Accessible Tram', 'East'); CREATE TABLE Trips (TripID int, VehicleID int, TripDateTime datetime);", 'sql': "SELECT COUNT(*) FROM Vehicles JOIN Trips ON Vehicles.VehicleID = Trips.VehicleID WHERE Vehicles.Region = 'East' AND Vehicles.VehicleType IN ('Wheelchair Bus', 'Accessible Tram') AND YEAR(Trips.TripDateTime) = YEAR(GETDATE());"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**1. Signature**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here is the signature for Text-to-SQL generation tasks in the format you requested:\n\n**Signature**\n\nSql Prompt: What is the total number of trips taken on accessible vehicles in the 'East' region for the current year?\n\nSql Context: CREATE TABLE Vehicles (VehicleID int, VehicleType varchar(255), Region varchar(255)); INSERT INTO Vehicles (VehicleID, VehicleType, Region) VALUES (1, 'Bus', 'East'), (2, 'Tram', 'West'), (3, 'Wheelchair Bus', 'South'), (4, 'Accessible Tram', 'East'); CREATE TABLE Trips (TripID int, VehicleID int, TripDateTime datetime);\n\nReasoning: Let's think step by step in order to"
), 1), (Example({'sql_prompt': 'Identify the suppliers with the highest and lowest sustainability ratings in the supplier_ratings table.', 'sql_context': 'CREATE TABLE supplier_ratings (supplier_id INT, sustainability_rating INT); INSERT INTO supplier_ratings (supplier_id, sustainability_rating) VALUES (100, 95), (101, 60), (102, 90);', 'sql': 'SELECT supplier_id, sustainability_rating FROM (SELECT supplier_id, sustainability_rating, RANK() OVER (ORDER BY sustainability_rating DESC) AS rank, RANK() OVER (ORDER BY sustainability_rating ASC) AS reverse_rank FROM supplier_ratings) WHERE rank = 1 OR reverse_rank = 1;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation task:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here are the signatures for Text-to-SQL generation task:\n\n**Signature 1**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,\nReason"
), 0), (Example({'sql_prompt': 'What is the total amount of socially responsible loans issued to women in 2021?', 'sql_context': 'CREATE TABLE socially_responsible_lending (id INT PRIMARY KEY, loan_amount DECIMAL(10, 2), borrower_gender TEXT, lending_date DATE);', 'sql': "SELECT SUM(loan_amount) FROM socially_responsible_lending WHERE borrower_gender = 'Female' AND lending_date BETWEEN '2021-01-01' AND '2021-12-31';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here is the completed signature:\n\n---\n\nSignature for Text-to-SQL Generation Task\n\nSql Prompt: What is the total amount of socially responsible loans issued to women in 2021?\n\nSql Context: CREATE TABLE socially_responsible_lending (id INT PRIMARY KEY, loan_amount DECIMAL(10, 2), borrower_gender TEXT, lending_date DATE);\n\nReasoning: Let's think step by step in order to ${produce the sql}. We need to filter the loans issued to women and then sum up their amounts. We can do this by using a WHERE clause with the condition `borrower_gender = 'women'` and then use the SUM function to calculate the total amount.",
    sql='SELECT SUM(loan_amount) FROM socially_responsible_lending'
), 0), (Example({'sql_prompt': 'What is the maximum energy efficiency rating of hydroelectric dams in Canada?', 'sql_context': "CREATE TABLE hydro_dams (id INT, name TEXT, country TEXT, energy_efficiency_rating FLOAT); INSERT INTO hydro_dams (id, name, country, energy_efficiency_rating) VALUES (1, 'Robert-Bourassa', 'Canada', 0.94), (2, 'Churchill Falls', 'Canada', 0.92);", 'sql': "SELECT MAX(energy_efficiency_rating) FROM hydro_dams WHERE country = 'Canada';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation task:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here are the signatures for Text-to-SQL generation task:\n\n**Signature 1**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,\nReason"
), 0), (Example({'sql_prompt': 'How many streams did each song by an artist get in a given month?', 'sql_context': "CREATE TABLE Songs (id INT, artist_id INT, title VARCHAR(50)); CREATE TABLE Streams (id INT, song_id INT, date DATE, streams INT); INSERT INTO Songs (id, artist_id, title) VALUES (1, 1, 'Shake it Off'), (2, 1, 'Blank Space'), (3, 2, 'Humble'), (4, 2, 'DNA'); INSERT INTO Streams (id, song_id, date, streams) VALUES (1, 1, '2022-01-01', 1000), (2, 1, '2022-01-02', 1500), (3, 2, '2022-01-01', 2000), (4, 2, '2022-01-02', 2500), (5, 3, '2022-01-01', 3000), (6, 3, '2022-01-02', 3500), (7, 4, '2022-01-01', 4000), (8, 4, '2022-01-02', 4500);", 'sql': "SELECT s.title, SUM(s.streams) as total_streams FROM Songs s JOIN Streams st ON s.id = st.song_id WHERE st.date BETWEEN '2022-01-01' AND '2022-01-31' GROUP BY s.title;"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale='Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**1. How many yellow cards were given to \'Bayern Munich\' players in the \'Champions League\'?**\n\nSql Prompt: Natural language query - "How many yellow cards were given to \'Bayern Munich\' players in the \'Champions League\'?"\n\nSignature:\n`SELECT COUNT(*) FROM yellow_cards WHERE team = \'Bayern Munich\' AND tournament = \'Champions League\';`\n\nReasoning: Let\'s think step by step in order to generate this SQL query. We need to count the number of rows in the `yellow_cards` table where the `team` column matches \'Bayern Munich\' and the `tournament` column matches \'Champions League\'.\n\n---\n\n**',
    sql="Here is the signature for Text-to-SQL generation task:\n\n**1. How many yellow cards were given to investment) VALUES (1, 'Western Europe', 'Climate Communication', 2018, 500000); INSERT INTO climate_investments (id, region, category, year, investment) VALUES (2, 'Eastern Europe', 'Climate Adaptation', 2019, 700000); INSERT INTO climate_investments (id, region, category, year, investment) VALUES (3, 'Central Asia', 'Climate Communication', 2019, 800000);\nSql Prompt: Natural language query\n\nSql Context: CREATE TABLE climate_investments (id INT, region VARCHAR(50), category VARCHAR(50), year"
), 0), (Example({'sql_prompt': 'What is the total number of security incidents for each department in the organization?', 'sql_context': 'CREATE TABLE incident (incident_id INT, incident_date DATE, incident_description TEXT, department_id INT);CREATE TABLE department (department_id INT, department_name VARCHAR(255));', 'sql': 'SELECT d.department_name, COUNT(i.incident_id) AS incident_count FROM incident i JOIN department d ON i.department_id = d.department_id GROUP BY d.department_name;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**1. Signature**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here is the signature for Text-to-SQL generation tasks:\n\n**Signature**\n\nSql Prompt: What is the total number of security incidents for each department in the organization?\n\nSql Context: CREATE TABLE incident (incident_id INT, incident_date DATE, incident_description TEXT, department_id INT);CREATE TABLE department (department_id INT, department_name VARCHAR(255));\n\nReasoning: Let's think step by step in order to produce the SQL. We need to join the `incident` table with the `department` table on the `department_id` column to get the total number of security incidents for each department. Then, we can use a GROUP BY clause to group the results by department and count the number of incidents.\n\nSql: SELECT department_name, COUNT(*)"
), 0), (Example({'sql_prompt': 'What is the market spend on sustainable tourism initiatives in Japan between 2017 and 2019?', 'sql_context': "CREATE TABLE sustainable_tourism_initiatives(initiative_id INT, name TEXT, country TEXT, start_year INT, end_year INT, market_spend INT);INSERT INTO sustainable_tourism_initiatives (initiative_id, name, country, start_year, end_year, market_spend) VALUES (1, 'Eco-friendly hotels in Tokyo', 'Japan', 2017, 2019, 5000000), (2, 'Sustainable transport in Kyoto', 'Japan', 2018, 2019, 7000000), (3, 'Carbon offsetting in Osaka', 'Japan', 2017, 2018, 3000000);", 'sql': "SELECT SUM(market_spend) FROM sustainable_tourism_initiatives WHERE country = 'Japan' AND start_year BETWEEN 2017 AND 2019;"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n**1. How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 5), (2, 1, 3); ... (more",
    sql="Here are the signatures for Text-to-SQL generation tasks:\n\n**1. How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\n\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 5), (2, 1, 3);\n\nReasoning:"
), 0), (Example({'sql_prompt': 'What is the percentage of hotels in Europe that offer virtual tours?', 'sql_context': "CREATE TABLE hotel_features (hotel_id INT, hotel_name TEXT, virtual_tour INT, country TEXT); INSERT INTO hotel_features (hotel_id, hotel_name, virtual_tour, country) VALUES (1, 'Hotel A', 1, 'France'), (2, 'Hotel B', 0, 'Germany'), (3, 'Hotel C', 1, 'Italy'), (4, 'Hotel D', 0, 'France'), (5, 'Hotel E', 1, 'Spain');", 'sql': "SELECT (COUNT(*) FILTER (WHERE virtual_tour = 1) * 100.0 / COUNT(*)) AS percentage FROM hotel_features WHERE country = 'Europe';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here is the signature for Text-to-SQL generation tasks in the format you requested:\n\n**Signature 1**\nSql Prompt: What is the percentage of hotels in Europe that offer virtual tours?\n\nSql Context: CREATE TABLE hotel_features (hotel_id INT, hotel_name TEXT, virtual_tour INT, country TEXT); INSERT INTO hotel_features (hotel_id, hotel_name, virtual_tour, country) VALUES (1, 'Hotel A', 1, 'France'), (2, 'Hotel B', 0, 'Germany'), (3, 'Hotel C', 1, 'Italy'), (4, 'Hotel D', 0, 'France'), (5, 'Hotel E', 1, 'Spain');\n\nReasoning: Let's"
), 1), (Example({'sql_prompt': 'What are the ethical AI principles for the technology projects in India?', 'sql_context': "CREATE TABLE EthicalAI (principle_id INT, principle_name VARCHAR(50), project_location VARCHAR(20)); INSERT INTO EthicalAI (principle_id, principle_name, project_location) VALUES (1, 'Fairness', 'India'), (2, 'Accountability', 'India'), (3, 'Transparency', 'India'), (4, 'Data Minimization', 'India'), (5, 'Explainability', 'India'), (6, 'Human Oversight', 'India');", 'sql': "SELECT principle_name FROM EthicalAI WHERE project_location = 'India';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here are the signatures for Text-to-SQL generation tasks:\n\n**Signature 1**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,\nReason"
), 0), (Example({'sql_prompt': 'What is the total mass of all spacecraft manufactured by SpaceX?', 'sql_context': "CREATE TABLE Spacecraft (SpacecraftID INT, SpacecraftName VARCHAR(50), Manufacturer VARCHAR(50), Mass FLOAT); INSERT INTO Spacecraft (SpacecraftID, SpacecraftName, Manufacturer, Mass) VALUES (1, 'SpaceX Dragon', 'SpaceX', 10000), (2, 'Orion', 'Lockheed Martin', 20000), (3, 'Starliner', 'Boeing', 15000);", 'sql': "SELECT SUM(Mass) FROM Spacecraft WHERE Manufacturer = 'SpaceX';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here is the signature for Text-to-SQL generation tasks in the format you requested:\n\n**Signature 1**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\n\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT,"
), 0), (Example({'sql_prompt': "What is the total age of 'stone' artifacts in 'american_archaeology'?", 'sql_context': 'CREATE TABLE american_archaeology (id INT, site_name VARCHAR(50), artifact_name VARCHAR(50), age INT, material VARCHAR(20));', 'sql': "SELECT SUM(age) FROM american_archaeology WHERE material = 'stone';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here is the completed signature:\n\n---\n\nSignature for Text to SQL generation task.\n\nSql Prompt: What is the total age of 'stone' artifacts in 'american_archaeology'?\n\nSql Context: CREATE TABLE american_archaeology (id INT, site_name VARCHAR(50), artifact_name VARCHAR(50), age INT, material VARCHAR(20));\n\nReasoning: Let's think step by step in order to ${produce the sql}. We need to filter the artifacts that are made of 'stone', then sum up their ages. We can do this using a SELECT statement with a WHERE clause and an aggregate function.",
    sql="SELECT SUM(age) FROM american_archaeology WHERE material = 'stone';"
), 1), (Example({'sql_prompt': 'What is the average hotel price for beachfront hotels in Mexico?', 'sql_context': "CREATE TABLE hotels (hotel_id INT, name TEXT, country TEXT, has_beachfront BOOLEAN, price INT); INSERT INTO hotels (hotel_id, name, country, has_beachfront, price) VALUES (1, 'Beach Palace', 'Mexico', true, 200), (2, 'Green Valley', 'USA', false, 150);", 'sql': "SELECT AVG(price) FROM hotels WHERE has_beachfront = true AND country = 'Mexico';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here are the signatures for Text-to-SQL generation tasks in the format you requested:\n\n**Signature 1**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT,"
), 0), (Example({'sql_prompt': 'List all instructors and number of students they support with accommodations.', 'sql_context': 'CREATE TABLE Instructors (id INT, name VARCHAR(50), title VARCHAR(50));', 'sql': 'SELECT i.name, COUNT(a.student_id) as supported_students FROM Instructors i JOIN Accommodations a ON i.id = a.instructor_id GROUP BY i.name;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**1. Signature**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here is the signature for Text-to-SQL generation task:\n\n**Signature**\n\nSql Prompt: List all instructors and number of students they support with accommodations.\n\nSql Context: CREATE TABLE Instructors (id INT, name VARCHAR(50), title VARCHAR(50)); \n\nReasoning: Let's think step by step in order to produce the SQL. We need to join the `Instructors` table with another table that contains information about students and their accommodations. Since we don't have any additional tables provided, let's assume there is a separate table called `Students` with columns `id`, `name`, and `accommodation`. We can then use a JOIN operation to combine these two tables based on the instructor ID.\n\nSql: SELECT i.name AS Instructor"
), 0), (Example({'sql_prompt': "What is the total fare collected from bus routes that start with the letter 'B'?", 'sql_context': "CREATE TABLE bus_trips (trip_id INT, route_id INT, fare FLOAT); INSERT INTO bus_trips (trip_id, route_id, fare) VALUES (1, 101, 2.5), (2, 202, 3.0), (3, 303, 1.5), (4, 404, 2.0), (5, 505, 2.5), (6, 106, 3.0); CREATE TABLE bus_routes (route_id INT, route_name TEXT, starting_letter TEXT); INSERT INTO bus_routes (route_id, route_name, starting_letter) VALUES (101, 'Broadway', 'B'), (202, 'Park Ave', 'P'), (303, 'Lakeshore', 'L'), (404, 'Sunset Blvd', 'S'), (505, 'Beverly Hills', 'B');", 'sql': "SELECT SUM(bt.fare) FROM bus_trips bt JOIN bus_routes br ON bt.route_id = br.route_id WHERE br.starting_letter = 'B';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, year INT, count INT); INSERT INTO yellow_cards (card_id, team_id, year, count) VALUES (1, 1, 2020, 5), (2, 1, 2020, 3), ...; CREATE TABLE leagues (league_id",
    sql="Here are the signatures for Text-to-SQL generation tasks:\n\n**Signature 1**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, year INT, count INT); INSERT INTO yellow_cards (card_id, team_id, year, count) VALUES (1, 1, 2020, 5), (2, 1, 2020, 3), ...; CREATE TABLE leagues (league_id INT"
), 0), (Example({'sql_prompt': 'What is the percentage of total revenue from streaming and concert ticket sales for Pop music in 2018?', 'sql_context': 'CREATE TABLE StreamingRevenue (id INT, year INT, genre VARCHAR(50), revenue FLOAT); CREATE TABLE ConcertTicketSales (id INT, year INT, genre VARCHAR(50), revenue FLOAT);', 'sql': "SELECT (SUM(sr.revenue) + SUM(cts.revenue)) / (SELECT SUM(revenue) FROM (SELECT revenue FROM StreamingRevenue WHERE year = 2018 UNION ALL SELECT revenue FROM ConcertTicketSales WHERE year = 2018) t) FROM StreamingRevenue sr JOIN ConcertTicketSales cts ON sr.genre = cts.genre WHERE sr.year = 2018 AND sr.genre = 'Pop';"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**1. How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3",
    sql="Here is the signature for Text-to-SQL generation tasks in the format you requested:\n\n**1. How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?**\n\nSql Prompt: What is the total number of yellow cards given to 'Bayern Munich' players in the 'Champions League'?\n\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2,"
), 0), (Example({'sql_prompt': 'What is the total defense spending by countries in Oceania in 2018?', 'sql_context': "CREATE TABLE defense_spending (country VARCHAR(50), continent VARCHAR(50), year INT, amount FLOAT); INSERT INTO defense_spending (country, continent, year, amount) VALUES ('Australia', 'Oceania', 2018, 750.3), ('New Zealand', 'Oceania', 2018, 23.4), ('Papua New Guinea', 'Oceania', 2018, 6.7);", 'sql': "SELECT SUM(amount) FROM defense_spending WHERE continent = 'Oceania' AND year = 2018;"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**1. Signature**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here is the signature for Text-to-SQL generation tasks:\n\n**Signature**\n\nSql Prompt: What is the total defense spending by countries in Oceania in 2018?\n\nSql Context: CREATE TABLE defense_spending (country VARCHAR(50), continent VARCHAR(50), year INT, amount FLOAT); INSERT INTO defense_spending (country, continent, year, amount) VALUES ('Australia', 'Oceania', 2018, 750.3), ('New Zealand', 'Oceania', 2018, 23.4), ('Papua New Guinea', 'Oceania', 2018, 6.7);\n\nReasoning: Let's think step by step in order to produce the SQL. We need to"
), 0), (Example({'sql_prompt': 'What is the total number of refugee families supported by each NGO in the last 6 months?', 'sql_context': "CREATE TABLE NGOs (NGOID int, NGOName varchar(50)); INSERT INTO NGOs (NGOID, NGOName) VALUES (1, 'International Rescue Committee'), (2, 'Save the Children'); CREATE TABLE RefugeeSupport (SupportID int, NGOID int, FamilyID int, SupportDate date); INSERT INTO RefugeeSupport (SupportID, NGOID, FamilyID, SupportDate) VALUES (1, 1, 1, '2022-01-01'), (2, 1, 2, '2022-02-01'), (3, 2, 1, '2022-03-01');", 'sql': 'SELECT NGOName, COUNT(DISTINCT FamilyID) as SupportedFamilies FROM NGOs INNER JOIN RefugeeSupport ON NGOs.NGOID = RefugeeSupport.NGOID WHERE SupportDate >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) GROUP BY NGOName;'}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here are the signatures for Text-to-SQL generation tasks:\n\n**Signature 1**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,\nReason"
), 0), (Example({'sql_prompt': "Which regulatory frameworks have been implemented in 'Country1'?", 'sql_context': "CREATE TABLE countries (id INT, name VARCHAR(255)); INSERT INTO countries (id, name) VALUES (1, 'Country1'); CREATE TABLE regulatory_frameworks (id INT, country_id INT, name VARCHAR(255)); INSERT INTO regulatory_frameworks (id, country_id, name) VALUES (1, 1, 'Framework1'); INSERT INTO regulatory_frameworks (id, country_id, name) VALUES (2, 1, 'Framework2'); INSERT INTO regulatory_frameworks (id, country_id, name) VALUES (3, 1, 'Framework3');", 'sql': "SELECT name FROM regulatory_frameworks WHERE country_id = (SELECT id FROM countries WHERE name = 'Country1');"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**Signature 1**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here is the signature for Text-to-SQL generation tasks in the format you requested:\n\n**Signature 1**\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\n\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT,"
), 0), (Example({'sql_prompt': 'What is the percentage of factories in each country that have implemented circular economy practices?', 'sql_context': "CREATE TABLE factory_circle (factory VARCHAR(255), country VARCHAR(255), practice VARCHAR(255)); INSERT INTO factory_circle (factory, country, practice) VALUES ('Factory1', 'Bangladesh', 'yes'), ('Factory2', 'Bangladesh', 'no'), ('Factory3', 'Bangladesh', 'yes'), ('Factory4', 'China', 'yes'), ('Factory5', 'China', 'no'), ('Factory6', 'India', 'no'), ('Factory7', 'India', 'yes'), ('Factory8', 'India', 'yes');", 'sql': "SELECT country, 100.0 * COUNT(*) FILTER (WHERE practice = 'yes') / COUNT(*) AS percentage FROM factory_circle GROUP BY country;"}) (input_keys={'sql_context', 'sql_prompt'}), Prediction(
    rationale="Here are the signatures for Text-to-SQL generation tasks:\n\n---\n\n**1. Signature**\n\nSql Prompt: How many yellow cards were given to 'Bayern Munich' players in the 'Champions League'?\nSql Context: CREATE TABLE teams (team_id INT, name TEXT); INSERT INTO teams (team_id, name) VALUES (1, 'Bayern Munich'), (2, 'Manchester United'); CREATE TABLE yellow_cards (card_id INT, team_id INT, cards INT); INSERT INTO yellow_cards (card_id, team_id, cards) VALUES (1, 1, 3), (2, 1, 2), (3, 2, 1); CREATE TABLE games (game_id INT, team_id INT,",
    sql="Here is the signature for Text-to-SQL generation tasks:\n\n**Signature**\n\nSql Prompt: What is the percentage of factories in each country that have implemented circular economy practices?\n\nSql Context: CREATE TABLE factory_circle (factory VARCHAR(255), country VARCHAR(255), practice VARCHAR(255)); INSERT INTO factory_circle (factory, country, practice) VALUES ('Factory1', 'Bangladesh', 'yes'), ('Factory2', 'Bangladesh', 'no'), ('Factory3', 'Bangladesh', 'yes'), ('Factory4', 'China', 'yes'), ('Factory5', 'China', 'no'), ('Factory6', 'India', 'no'), ('Factory7', 'India', 'yes'), ('Factory8', 'India', '"
), 1)]