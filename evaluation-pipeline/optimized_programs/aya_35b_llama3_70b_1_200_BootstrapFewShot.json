{
  "program": {
    "lm": null,
    "traces": [],
    "train": [],
    "demos": [
      {
        "augmented": true,
        "sql_prompt": "How many products in each category are available in the inventory?",
        "sql_context": "CREATE TABLE products (product_id int, name varchar(255), category varchar(255), quantity int); INSERT INTO products (product_id, name, category, quantity) VALUES (1, 'Organic Cotton T-Shirt', 'Clothing', 100), (2, 'Regular Cotton T-Shirt', 'Clothing', 150), (3, 'Reusable Water Bottle', 'Home', 200), (4, 'LED Light Bulb', 'Electronics', 50);",
        "rationale": "Here is the SQL query that answers the prompt:\n```sql\nSELECT category, COUNT(*) AS product_count\nFROM products\nGROUP BY category;\n```\n\nThis query selects the `category` column and counts the number of rows (products) in each category using the `COUNT(*)` aggregate function. The `GROUP BY` clause groups the results by the `category` column, so you get a count of products for each unique category in the inventory.",
        "sql": "Here is the SQL query that answers the prompt:\n```sql\nSELECT category, COUNT(*) AS product_count\nFROM products\nGROUP BY category;\n```\n\nThis query selects the `category` column and counts the number of rows (products) in each category using the `COUNT(*)` aggregate function. The `GROUP BY` clause groups the results by the `category` column, so you get a count of products for each unique category in the inventory."
      },
      {
        "augmented": true,
        "sql_prompt": "What is the peak usage time for each day of the week?",
        "sql_context": "CREATE TABLE usage_timestamps (usage_time TIMESTAMP, data_usage FLOAT); INSERT INTO usage_timestamps (usage_time, data_usage) VALUES ('2022-01-01 09:00:00', 5000), ('2022-01-01 10:00:00', 6000), ('2022-01-02 11:00:00', 7000);",
        "rationale": "Here is the SQL query to find the peak usage time for each day of the week:\n```sql\nSELECT \n    EXTRACT(DOW FROM usage_time) AS day_of_week,\n    MAX(data_usage) AS peak_usage\nFROM usage_timestamps\nGROUP BY day_of_week\nORDER BY day_of_week;\n```\nStep by step reasoning: \n1. The `EXTRACT` function is used to get the day of the week from the `usage_time` column, which is a timestamp. \n2. The `MAX` function is then used to find the peak data usage for each day. \n3. The `GROUP BY` clause groups the results by the day",
        "sql": "Here is the SQL query to find the peak usage time for each day of the week:\n```sql\nSELECT EXTRACT(DOW FROM usage_time) AS day_of_week,\n       MAX(data_usage) AS peak_usage\nFROM usage_timestamps\nGROUP BY day_of_week\nORDER BY day_of_week;\n```\n\nStep by step reasoning:\n1. The `EXTRACT` function is used to get the day of the week from the `usage_time` column, which is a timestamp.\n2. The `MAX` function is then used to find the peak data usage for each day.\n3. The `GROUP BY` clause groups the results by the day"
      },
      {
        "sql_prompt": "What is the total amount donated by each donor, ordered from highest to lowest?",
        "sql_context": "CREATE TABLE Donors (DonorID INT, DonorName VARCHAR(50), TotalDonation DECIMAL(10,2)); INSERT INTO Donors VALUES (1, 'John Doe', 5000.00), (2, 'Jane Smith', 3500.00), (3, 'Mike Johnson', 2000.00);",
        "sql": "SELECT DonorName, TotalDonation FROM Donors ORDER BY TotalDonation DESC;"
      },
      {
        "sql_prompt": "Determine the average monthly data usage for customers in each region.",
        "sql_context": "CREATE TABLE subscribers_2 (id INT, region VARCHAR(20), data_usage FLOAT); INSERT INTO subscribers_2 (id, region, data_usage) VALUES (1, 'western', 8000); INSERT INTO subscribers_2 (id, region, data_usage) VALUES (2, 'eastern', 10000);",
        "sql": "SELECT region, AVG(data_usage) FROM subscribers_2 GROUP BY region;"
      },
      {
        "sql_prompt": "What are the green building certifications in France?",
        "sql_context": "CREATE TABLE GreenBuildings (id INT, name VARCHAR(50), city VARCHAR(50), state VARCHAR(50), country VARCHAR(50), certification VARCHAR(50)); INSERT INTO GreenBuildings (id, name, city, state, country, certification) VALUES (3, 'GreenHaus', 'Berlin', 'Berlin', 'Germany', 'DGNB Gold');",
        "sql": "SELECT g.certification FROM GreenBuildings g WHERE g.country = 'France';"
      },
      {
        "sql_prompt": "How many unique service types are provided in the 'defendant_services' table?",
        "sql_context": "CREATE TABLE defendant_services (id INT, case_number INT, defendant_name VARCHAR(255), service_type VARCHAR(255)); INSERT INTO defendant_services (id, case_number, defendant_name, service_type) VALUES (1, 1234, 'Jane Doe', 'Education');",
        "sql": "SELECT COUNT(DISTINCT service_type) FROM defendant_services;"
      },
      {
        "sql_prompt": "How many students in the \"Lifelong Learning\" program have submitted an assignment in the past week?",
        "sql_context": "CREATE TABLE lifelong_learning_students (id INT, name VARCHAR(50), program VARCHAR(50), last_assignment DATE);",
        "sql": "SELECT COUNT(*) FROM lifelong_learning_students WHERE last_assignment >= DATE_SUB(CURDATE(), INTERVAL 1 WEEK);"
      },
      {
        "sql_prompt": "List the top 3 energy efficient appliances in the US by energy star rating?",
        "sql_context": "CREATE TABLE appliances (id INT, name VARCHAR(255), country VARCHAR(255), energy_star_rating INT); INSERT INTO appliances (id, name, country, energy_star_rating) VALUES (1, 'Fridge A', 'USA', 5), (2, 'TV B', 'USA', 4), (3, 'Laptop C', 'USA', 5), (4, 'Microwave D', 'USA', 3);",
        "sql": "SELECT name, energy_star_rating FROM appliances WHERE country = 'USA' ORDER BY energy_star_rating DESC LIMIT 3;"
      },
      {
        "sql_prompt": "What is the difference in total assets between customers who have invested in mutual funds and those who have not?",
        "sql_context": "CREATE TABLE customers (customer_id INT, name VARCHAR(50), age INT, gender VARCHAR(10), total_assets DECIMAL(10,2)); INSERT INTO customers (customer_id, name, age, gender, total_assets) VALUES (1, 'John Doe', 35, 'Male', 50000.00), (2, 'Jane Smith', 45, 'Female', 75000.00), (3, 'Bob Johnson', 50, 'Male', 60000.00); CREATE TABLE investments (customer_id INT, investment_type VARCHAR(20), value DECIMAL(10,2)); INSERT INTO investments (customer_id, investment_type, value) VALUES (1, 'Stocks', 30000.00), (1, 'Bonds', 20000.00), (2, 'Stocks', 50000.00), (2, 'Mutual Funds', 25000.00), (3, 'Stocks', 40000.00), (3, 'Bonds', 20000.00);",
        "sql": "SELECT SUM(c.total_assets) - subquery.total_assets FROM customers c RIGHT JOIN (SELECT SUM(total_assets) as total_assets FROM customers c INNER JOIN investments i ON c.customer_id = i.customer_id WHERE i.investment_type = 'Mutual Funds') subquery ON 1=1;"
      },
      {
        "sql_prompt": "What is the average temperature per year in the Arctic Research Lab?",
        "sql_context": "CREATE TABLE ArcticResearchLab (id INT, year INT, temperature FLOAT); INSERT INTO ArcticResearchLab (id, year, temperature) VALUES (1, 2000, -10.5), (2, 2001, -11.3), (3, 2002, -12.1);",
        "sql": "SELECT AVG(temperature) FROM ArcticResearchLab GROUP BY year;"
      },
      {
        "sql_prompt": "What is the minimum number of passengers for shared autonomous vehicles in District 3?",
        "sql_context": "CREATE TABLE shared_autonomous_vehicles (vehicle_id INT, passengers INT, district INT); INSERT INTO shared_autonomous_vehicles (vehicle_id, passengers, district) VALUES (301, 6, 3), (302, 4, 3), (303, 7, 4);",
        "sql": "SELECT MIN(passengers) FROM shared_autonomous_vehicles WHERE district = 3;"
      },
      {
        "sql_prompt": "List all materials used in the manufacturing sector in Brazil and South Africa.",
        "sql_context": "CREATE TABLE material_data (material_name VARCHAR(50), country VARCHAR(50), industry VARCHAR(50)); INSERT INTO material_data (material_name, country, industry) VALUES ('Steel', 'Brazil', 'Manufacturing'), ('Aluminum', 'Brazil', 'Manufacturing'), ('Plastic', 'Brazil', 'Manufacturing'), ('Glass', 'Brazil', 'Manufacturing'), ('Titanium', 'South Africa', 'Manufacturing'), ('Steel', 'South Africa', 'Manufacturing'), ('Aluminum', 'South Africa', 'Manufacturing');",
        "sql": "SELECT DISTINCT material_name FROM material_data WHERE country IN ('Brazil', 'South Africa') AND industry = 'Manufacturing';"
      },
      {
        "sql_prompt": "What is the average amount of aid provided per refugee in the Middle East?",
        "sql_context": "CREATE TABLE refugees (id INT, name TEXT, region TEXT); CREATE TABLE aid_distributions (id INT, refugee_id INT, amount DECIMAL); INSERT INTO refugees (id, name, region) VALUES (1, 'Ahmed', 'Middle East'), (2, 'Fatima', 'Middle East'), (3, 'Jose', 'South America'); INSERT INTO aid_distributions (id, refugee_id, amount) VALUES (1, 1, 100.00), (2, 1, 150.00), (3, 2, 200.00);",
        "sql": "SELECT AVG(ad.amount) as avg_aid_per_refugee FROM refugees r INNER JOIN aid_distributions ad ON r.id = ad.refugee_id WHERE r.region = 'Middle East';"
      },
      {
        "sql_prompt": "Delete records from the 'resource_depletion' table where the 'resource_type' is 'Coal'",
        "sql_context": "CREATE TABLE resource_depletion (id INT, resource_type VARCHAR(20), quantity INT, depletion_date DATE); INSERT INTO resource_depletion (id, resource_type, quantity, depletion_date) VALUES (1, 'Coal', 1000, '2020-01-01'), (2, 'Iron Ore', 500, '2019-12-31'), (3, 'Coal', 1500, '2018-12-31');",
        "sql": "DELETE FROM resource_depletion WHERE resource_type = 'Coal';"
      },
      {
        "sql_prompt": "What was the total attendance at poetry readings in San Francisco?",
        "sql_context": "CREATE TABLE events (id INT, event_type VARCHAR(50), city VARCHAR(50), attendance INT); INSERT INTO events (id, event_type, city, attendance) VALUES (1, 'Poetry Reading', 'San Francisco', 50), (2, 'Music Concert', 'Los Angeles'), (3, 'Poetry Reading', 'San Francisco', 75);",
        "sql": "SELECT SUM(attendance) FROM events WHERE event_type = 'Poetry Reading' AND city = 'San Francisco';"
      },
      {
        "sql_prompt": "What is the total number of multimodal trips taken in Toronto, Canada using public transportation?",
        "sql_context": "CREATE TABLE multimodal_trips_canada (trip_id INT, trip_duration INT, start_time TIMESTAMP, end_time TIMESTAMP, start_station TEXT, end_station TEXT, city TEXT, mode TEXT);",
        "sql": "SELECT COUNT(*) FROM multimodal_trips_canada WHERE city = 'Toronto' AND mode LIKE '%public%';"
      }
    ],
    "signature_instructions": "Given the fields `sql_prompt`, `sql_context`, produce the fields `sql`.",
    "signature_prefix": "Sql:",
    "extended_signature_instructions": "Given the fields `sql_prompt`, `sql_context`, produce the fields `sql`.",
    "extended_signature_prefix": "Sql:"
  }
}