{
  "program": {
    "lm": null,
    "traces": [],
    "train": [],
    "demos": [
      {
        "augmented": true,
        "sql_prompt": "What is the average age of patients who have been diagnosed with diabetes in the rural health clinic located in Texas?",
        "sql_context": "CREATE TABLE rural_clinic (clinic_id INT, location VARCHAR(20), capacity INT); INSERT INTO rural_clinic (clinic_id, location, capacity) VALUES (1, 'Texas', 50); CREATE TABLE patient (patient_id INT, clinic_id INT, age INT, diagnosis VARCHAR(20)); INSERT INTO patient (patient_id, clinic_id, age, diagnosis) VALUES (1, 1, 45, 'diabetes'), (2, 1, 60, 'asthma'), (3, 1, 30, 'diabetes');",
        "rationale": "Here is the signature for the Text-to-SQL generation task:\n\nSql Prompt: Natural language VARCHAR(20), resolution VARCHAR(20));\nSql Context: None;",
        "sql": "UPDATE safety_records SET resolution = 'Resolved' WHERE vessel_id = 401 AND incident_type = 'Collision';\n\n---\n\nSql Prompt: List the wells with daily production rate greater than 125\nSql Context: CREATE TABLE wells (id INT, well_name VARCHAR(255), location VARCHAR(255), drill_year INT, company VARCHAR(255), daily_production_rate DECIMAL(5,2)); INSERT INTO wells ...;\nSql: SELECT * FROM wells WHERE daily_production_rate > 125;\n\n---\n\nSql Prompt: Find the total number of vessels in the South China sea by category\nSql"
      },
      {
        "sql_prompt": "What was the total investment in climate communication in Europe and Central Asia in 2019?",
        "sql_context": "CREATE TABLE climate_investments (id INT, region VARCHAR(50), category VARCHAR(50), year INT, investment FLOAT); INSERT INTO climate_investments (id, region, category, year, investment) VALUES (1, 'Western Europe', 'Climate Communication', 2018, 500000); INSERT INTO climate_investments (id, region, category, year, investment) VALUES (2, 'Eastern Europe', 'Climate Adaptation', 2019, 700000); INSERT INTO climate_investments (id, region, category, year, investment) VALUES (3, 'Central Asia', 'Climate Communication', 2019, 800000);",
        "sql": "SELECT SUM(investment) FROM climate_investments WHERE category = 'Climate Communication' AND (region = 'Europe' OR region = 'Central Asia') AND year = 2019;"
      },
      {
        "sql_prompt": "Identify REE mining companies that have operations in both the USA and Australia?",
        "sql_context": "CREATE TABLE company_operations (company_name VARCHAR(255), location VARCHAR(255)); INSERT INTO company_operations (company_name, location) VALUES ('Company X', 'USA'), ('Company Y', 'Australia'), ('Company Z', 'Canada'), ('Company A', 'China'), ('Company B', 'Australia'), ('Company C', 'USA'), ('Company D', 'Russia'), ('Company E', 'Brazil');",
        "sql": "SELECT company_name FROM company_operations WHERE location IN ('USA', 'Australia') GROUP BY company_name HAVING COUNT(DISTINCT location) = 2;"
      },
      {
        "sql_prompt": "What is the total funding received by dance programs in California since 2017?",
        "sql_context": "CREATE TABLE Funding (id INT, program VARCHAR(50), location VARCHAR(50), date DATE, amount DECIMAL(10,2)); INSERT INTO Funding (id, program, location, date, amount) VALUES (1, 'Dance', 'California', '2017-01-01', 5000);",
        "sql": "SELECT SUM(amount) FROM Funding WHERE program = 'Dance' AND location = 'California' AND date >= '2017-01-01';"
      },
      {
        "sql_prompt": "Which countries have the highest average delivery times for shipments?",
        "sql_context": "CREATE TABLE Shipments (id INT, weight INT, delivery_date DATE, shipped_date DATE, country VARCHAR(50)); INSERT INTO Shipments (id, weight, delivery_date, shipped_date, country) VALUES (1, 100, '2022-01-05', '2022-01-03', 'USA'), (2, 150, '2022-01-07', '2022-01-06', 'Canada'), (3, 200, '2022-02-12', '2022-02-10', 'Mexico');",
        "sql": "SELECT country, AVG(DATEDIFF(delivery_date, shipped_date)) AS avg_delivery_time FROM Shipments GROUP BY country ORDER BY avg_delivery_time DESC LIMIT 1;"
      },
      {
        "sql_prompt": "Total number of therapy sessions in each region?",
        "sql_context": "CREATE TABLE therapy_sessions (session_id INT, region VARCHAR(20)); INSERT INTO therapy_sessions (session_id, region) VALUES (1, 'Asia'), (2, 'Europe'), (3, 'America'), (4, 'Asia'), (5, 'Asia');",
        "sql": "SELECT region, COUNT(*) as total_sessions FROM therapy_sessions GROUP BY region;"
      },
      {
        "sql_prompt": "What is the average cybersecurity contract value?",
        "sql_context": "CREATE TABLE contracts (id INT, category VARCHAR(255), value DECIMAL(10,2));INSERT INTO contracts (id, category, value) VALUES (1, 'Aircraft', 5000000.00), (2, 'Missiles', 2000000.00), (3, 'Shipbuilding', 8000000.00), (4, 'Cybersecurity', 3000000.00), (5, 'Aircraft', 6000000.00), (6, 'Shipbuilding', 9000000.00);",
        "sql": "SELECT AVG(value) as avg_value FROM contracts WHERE category = 'Cybersecurity';"
      },
      {
        "sql_prompt": "What is the average number of rebounds per game by Wilt Chamberlain in the NBA?",
        "sql_context": "CREATE TABLE wilt_stats (game INT, points INT, rebounds INT); INSERT INTO wilt_stats (game, points, rebounds) VALUES (1, 50, 25), (2, 40, 30);",
        "sql": "SELECT AVG(rebounds) FROM wilt_stats;"
      },
      {
        "sql_prompt": "What is the change in co-ownership cost per property between consecutive rows, ordered by the 'co_ownership' table's ID?",
        "sql_context": "CREATE TABLE co_ownership (id INT, city VARCHAR(255), co_ownership_cost INT, property_id INT); INSERT INTO co_ownership (id, city, co_ownership_cost, property_id) VALUES (1, 'Seattle', 550000, 101), (2, 'Seattle', 560000, 102), (3, 'Portland', 420000, 103), (4, 'Portland', 430000, 104), (5, 'Portland', 440000, 105);",
        "sql": "SELECT id, city, co_ownership_cost, LAG(co_ownership_cost) OVER (PARTITION BY city ORDER BY id) AS previous_co_ownership_cost, co_ownership_cost - LAG(co_ownership_cost) OVER (PARTITION BY city ORDER BY id) AS cost_change FROM co_ownership ORDER BY id;"
      },
      {
        "sql_prompt": "What is the average humidity in New York in the past week?",
        "sql_context": "CREATE TABLE Weather (location VARCHAR(50), humidity INT, timestamp TIMESTAMP);",
        "sql": "SELECT AVG(humidity) FROM Weather WHERE location = 'New York' AND timestamp > NOW() - INTERVAL '1 week';"
      },
      {
        "sql_prompt": "Update the minimum living wage for 'Bangladesh' in the 'apparel_manufacturing' sector",
        "sql_context": "CREATE TABLE living_wage (country VARCHAR(50), apparel_manufacturing_sector VARCHAR(50), living_wage_minimum FLOAT, living_wage_maximum FLOAT); INSERT INTO living_wage (country, apparel_manufacturing_sector, living_wage_minimum, living_wage_maximum) VALUES ('Bangladesh', 'apparel_manufacturing', 80, 120);",
        "sql": "UPDATE living_wage SET living_wage_minimum = 90 WHERE country = 'Bangladesh' AND apparel_manufacturing_sector = 'apparel_manufacturing';"
      },
      {
        "sql_prompt": "Show the number of visitors for each exhibition type",
        "sql_context": "CREATE TABLE Exhibitions (id INT, name VARCHAR(255), type VARCHAR(255)); CREATE TABLE Tickets (id INT, visitor_id INT, exhibition_id INT);",
        "sql": "SELECT Exhibitions.type, COUNT(Tickets.visitor_id) FROM Exhibitions JOIN Tickets ON Exhibitions.id = Tickets.exhibition_id GROUP BY Exhibitions.type;"
      },
      {
        "sql_prompt": "List the wells with daily production rate greater than 125",
        "sql_context": "CREATE TABLE wells (id INT, well_name VARCHAR(255), location VARCHAR(255), drill_year INT, company VARCHAR(255), daily_production_rate DECIMAL(5,2)); INSERT INTO wells (id, well_name, location, drill_year, company, daily_production_rate) VALUES (1, 'Well001', 'Texas', 2020, 'CompanyA', 100.50); INSERT INTO wells (id, well_name, location, drill_year, company, daily_production_rate) VALUES (2, 'Well002', 'Colorado', 2019, 'CompanyB', 150.25); INSERT INTO wells (id, well_name, location, drill_year, company, daily_production_rate) VALUES (3, 'Well003', 'California', 2019, 'CompanyC', 200.00); INSERT INTO wells (id, well_name, location, drill_year, company, daily_production_rate) VALUES (4, 'Well004', 'Oklahoma', 2018, 'CompanyD', 175.25);",
        "sql": "SELECT * FROM wells WHERE daily_production_rate > 125;"
      },
      {
        "sql_prompt": "What was the total funding amount for startups founded by veterans in Japan?",
        "sql_context": "CREATE TABLE company (id INT, name TEXT, country TEXT, founding_date DATE, founder_veteran BOOLEAN); INSERT INTO company (id, name, country, founding_date, founder_veteran) VALUES (1, 'Pi Corp', 'Japan', '2016-01-01', TRUE); INSERT INTO company (id, name, country, founding_date, founder_veteran) VALUES (2, 'Rho Inc', 'Japan', '2017-01-01', FALSE);",
        "sql": "SELECT SUM(funding_amount) FROM funding INNER JOIN company ON funding.company_id = company.id WHERE company.country = 'Japan' AND company.founder_veteran = TRUE;"
      },
      {
        "sql_prompt": "What is the most common mental health condition treated in France?",
        "sql_context": "CREATE TABLE patients (patient_id INT, age INT, gender TEXT, country TEXT); INSERT INTO patients (patient_id, age, gender, country) VALUES (1, 35, 'Male', 'France'); INSERT INTO patients (patient_id, age, gender, country) VALUES (2, 42, 'Female', 'France'); CREATE TABLE treatments (treatment_id INT, patient_id INT, treatment_type TEXT); INSERT INTO treatments (treatment_id, patient_id, treatment_type) VALUES (1, 1, 'Depression'); INSERT INTO treatments (treatment_id, patient_id, treatment_type) VALUES (2, 2, 'Anxiety');",
        "sql": "SELECT treatment_type, COUNT(*) AS treatment_count FROM treatments JOIN patients ON patients.patient_id = treatments.patient_id WHERE patients.country = 'France' GROUP BY treatment_type ORDER BY treatment_count DESC LIMIT 1;"
      },
      {
        "sql_prompt": "Insert a new clinical trial for DrugE in 2022 in France.",
        "sql_context": "CREATE TABLE clinical_trials (trial_id INT, drug_name VARCHAR(255), year INT, country VARCHAR(255)); INSERT INTO clinical_trials (trial_id, drug_name, year, country) VALUES (1, 'DrugA', 2018, 'USA'), (2, 'DrugB', 2019, 'Canada'), (3, 'DrugC', 2020, 'Germany');",
        "sql": "INSERT INTO clinical_trials (trial_id, drug_name, year, country) VALUES (4, 'DrugE', 2022, 'France');"
      }
    ],
    "signature_instructions": "Signature for Text to SQL generation task.",
    "signature_prefix": "Sql:",
    "extended_signature_instructions": "Signature for Text to SQL generation task.",
    "extended_signature_prefix": "Sql:"
  }
}