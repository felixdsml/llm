{
  "program": {
    "lm": null,
    "traces": [],
    "train": [],
    "demos": [
      {
        "sql_prompt": "List all sustainable tourism initiatives in Canada and their respective number of participants.",
        "sql_context": "CREATE TABLE initiatives (initiative_id INT, name TEXT, country TEXT); CREATE TABLE participants (initiative_id INT, participant_id INT); INSERT INTO initiatives VALUES (1, 'Green Trails', 'Canada'), (2, 'Eco-friendly Cruises', 'Canada'); INSERT INTO participants VALUES (1, 1), (1, 2), (2, 3), (2, 4), (2, 5);",
        "sql": "SELECT initiatives.name, COUNT(participants.participant_id) FROM initiatives INNER JOIN participants ON initiatives.initiative_id = participants.initiative_id WHERE country = 'Canada' GROUP BY initiatives.name;"
      },
      {
        "sql_prompt": "What are the top 3 cuisine types with the lowest calorie content?",
        "sql_context": "CREATE TABLE cuisine (id INT, type VARCHAR(50), calories INT); INSERT INTO cuisine (id, type, calories) VALUES (1, 'Italian', 500), (2, 'Mexican', 600), (3, 'Japanese', 400), (4, 'Chinese', 450), (5, 'Indian', 550), (6, 'Thai', 480);",
        "sql": "SELECT type, calories, RANK() OVER (ORDER BY calories ASC) as rank FROM cuisine WHERE rank <= 3;"
      },
      {
        "sql_prompt": "Create a cross join table for mental health parity and community health workers",
        "sql_context": "CREATE TABLE mental_health_parity (id INT PRIMARY KEY, state VARCHAR(2), year INT, accessibility FLOAT, quality FLOAT); CREATE TABLE community_health_workers (id INT PRIMARY KEY, state VARCHAR(2), year INT, workers_per_capita FLOAT, supervision_hours INT);",
        "sql": "CREATE TABLE if not exists mental_health_parity_community_workers AS SELECT * FROM mental_health_parity CROSS JOIN community_health_workers WHERE FALSE;"
      },
      {
        "sql_prompt": "Update the speed of electric trains in New York to reflect the latest measurements.",
        "sql_context": "CREATE TABLE public.trains (id SERIAL PRIMARY KEY, name TEXT, speed FLOAT, city TEXT); INSERT INTO public.trains (name, speed, city) VALUES ('Electric Train 1', 85.2, 'New York'), ('Electric Train 2', 88.9, 'New York');",
        "sql": "UPDATE public.trains SET speed = 86.1 WHERE city = 'New York' AND name LIKE 'Electric Train%';"
      }
    ],
    "signature_instructions": "From the given natural language query and context, generate the corresponding SQL query. The SQL query should be executable and correctly answer the natural language query based on the context provided. The output should only include the SQL query without any additional text or explanations.",
    "signature_prefix": "Sql:"
  }
}