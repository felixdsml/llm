{
  "program": {
    "lm": null,
    "traces": [],
    "train": [],
    "demos": [
      {
        "sql_prompt": "Insert a new student into the graduate_students table",
        "sql_context": "CREATE TABLE graduate_students (id INT, name TEXT, department TEXT); INSERT INTO graduate_students (id, name, department) VALUES (1, 'Alice', 'CS'), (2, 'Bob', 'Physics');",
        "sql": "INSERT INTO graduate_students (id, name, department) VALUES (3, 'Charlie', 'Math');"
      },
      {
        "sql_prompt": "What is the racial and ethnic diversity of the company?",
        "sql_context": "CREATE TABLE employees (id INT, name VARCHAR(255), race VARCHAR(255), ethnicity VARCHAR(255)); INSERT INTO employees (id, name, race, ethnicity) VALUES (1, 'John Doe', 'White', 'Not Hispanic or Latino'), (2, 'Jane Smith', 'Asian', 'Not Hispanic or Latino'), (3, 'Alice Johnson', 'Black or African American', 'Not Hispanic or Latino'), (4, 'Bob Brown', 'Hispanic or Latino', 'Mexican'), (5, 'Charlie Davis', 'White', 'Not Hispanic or Latino');",
        "sql": "SELECT race, COUNT(*) as num_employees, CONCAT(ROUND(COUNT(*) \/ (SELECT COUNT(*) FROM employees) * 100, 2), '%') as percent_of_employees FROM employees GROUP BY race;"
      },
      {
        "sql_prompt": "What is the average salary for female managers in the financial institutions table?",
        "sql_context": "CREATE TABLE financial_institutions (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255), location VARCHAR(255));",
        "sql": "SELECT AVG(salary) FROM employee_demographics WHERE role = 'Manager' AND gender = 'Female';"
      },
      {
        "sql_prompt": "How many timber harvest permits were issued in each region in 2019?",
        "sql_context": "CREATE TABLE harvest_permits (id INT, region VARCHAR(255), issued_date DATE);",
        "sql": "SELECT region, COUNT(*) as num_permits FROM harvest_permits WHERE EXTRACT(YEAR FROM issued_date) = 2019 GROUP BY region;"
      }
    ],
    "signature_instructions": "Given the fields `sql_prompt`, `sql_context`, produce the fields `sql`.",
    "signature_prefix": "Sql:",
    "extended_signature_instructions": "Given the fields `sql_prompt`, `sql_context`, produce the fields `sql`.",
    "extended_signature_prefix": "Sql:"
  }
}