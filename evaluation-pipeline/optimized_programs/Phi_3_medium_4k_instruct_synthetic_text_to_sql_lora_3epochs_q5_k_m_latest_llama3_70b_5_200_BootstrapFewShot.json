{
  "program": {
    "lm": null,
    "traces": [],
    "train": [],
    "demos": [
      {
        "augmented": true,
        "sql_prompt": "What is the most common mental health condition treated in France?",
        "sql_context": "CREATE TABLE patients (patient_id INT, age INT, gender TEXT, country TEXT); INSERT INTO patients (patient_id, age, gender, country) VALUES (1, 35, 'Male', 'France'); INSERT INTO patients (patient_id, age, gender, country) VALUES (2, 42, 'Female', 'France'); CREATE TABLE treatments (treatment_id INT, patient_id INT, treatment_type TEXT); INSERT INTO treatments (treatment_id, patient_id, treatment_type) VALUES (1, 1, 'Depression'); INSERT INTO treatments (treatment_id, patient_id, treatment_type) VALUES (2, 2, 'Anxiety');",
        "rationale": "Here is the signature for the Text-to-SQL generation task:\n\n**Sql Prompt:** What is the most common mental health condition treated in France?\n**Sql Context:** CREATE TABLE patients (patient_id INT, age INT, gender TEXT, country TEXT); INSERT INTO patients (patient_id, age, gender, country) VALUES (1, 35, 'Male', 'France'); INSERT INTO patients (patient_id, age, gender, country) VALUES (2, 42, 'Female', 'France'); CREATE TABLE treatments (treatment_id INT, patient_id INT, treatment_type TEXT); INSERT INTO treatments (treatment_id, patient_id, treatment_type) VALUES (1, 1, 'Depression'); INSERT INTO treatments (treatment",
        "sql": "Here is the completed signature:\n\nSql Prompt: What is the most common mental health condition treated in France?\n\nSql Context: CREATE TABLE patients (patient_id INT, age INT, gender TEXT, country TEXT); INSERT INTO patients (patient_id, age, gender, country) VALUES (1, 35, 'Male', 'France'); INSERT INTO patients (patient_id, age, gender, country) VALUES (2, 42, 'Female', 'France'); CREATE TABLE treatments (treatment_id INT, patient_id INT, treatment_type TEXT); INSERT INTO treatments (treatment_id, patient_id, treatment_type) VALUES (1, 1, 'Depression'); INSERT INTO treatments (treatment_id, patient_id, treatment_type) VALUES"
      },
      {
        "augmented": true,
        "sql_prompt": "Which countries have the highest average delivery times for shipments?",
        "sql_context": "CREATE TABLE Shipments (id INT, weight INT, delivery_date DATE, shipped_date DATE, country VARCHAR(50)); INSERT INTO Shipments (id, weight, delivery_date, shipped_date, country) VALUES (1, 100, '2022-01-05', '2022-01-03', 'USA'), (2, 150, '2022-01-07', '2022-01-06', 'Canada'), (3, 200, '2022-02-12', '2022-02-10', 'Mexico');",
        "rationale": "Here is the signature for the Text-to-SQL generation task:\n\n**Sql Prompt:** Which countries have the highest average delivery times for shipments?\n**Sql Context:** CREATE TABLE Shipments (id INT, weight INT, delivery_date DATE, shipped_date DATE, country VARCHAR(50)); INSERT INTO Shipments (id, weight, delivery_date, shipped_date, country) VALUES (1, 100, '2022-01-05', '2022-01-03', 'USA'), (2, 150, '2022-01-07', '2022-01-06', 'Canada'), (3, 200, '2022-02-12', '2022-02-10', 'Mexico');\n**",
        "sql": "Here is the completed signature:\n\nSql Prompt: Which countries have the highest average delivery times for shipments?\n\nSql Context: CREATE TABLE Shipments (id INT, weight INT, delivery_date DATE, shipped_date DATE, country VARCHAR(50)); INSERT INTO Shipments (id, weight, delivery_date, shipped_date, country) VALUES (1, 100, '2022-01-05', '2022-01-03', 'USA'), (2, 150, '2022-01-07', '2022-01-06', 'Canada'), (3, 200, '2022-02-12', '2022-02-10', 'Mexico');\n\nReasoning: Let's think step by step in"
      },
      {
        "sql_prompt": "Update the 'aid' value for 'Yemen' in the year 2018 to 1500000.00 in the 'humanitarian_assistance' table",
        "sql_context": "CREATE TABLE humanitarian_assistance (id INT PRIMARY KEY, country VARCHAR(50), year INT, aid FLOAT, organization VARCHAR(50));",
        "sql": "WITH cte AS (UPDATE humanitarian_assistance SET aid = 1500000.00 WHERE country = 'Yemen' AND year = 2018 RETURNING *) INSERT INTO humanitarian_assistance SELECT * FROM cte;"
      },
      {
        "sql_prompt": "What is the average mental health score for patients from historically marginalized communities?",
        "sql_context": "CREATE TABLE patients (id INT, name VARCHAR(100), community VARCHAR(50), mental_health_score INT); INSERT INTO patients (id, name, community, mental_health_score) VALUES (1, 'Alice', 'African American', 70), (2, 'Brian', 'Latinx', 65), (3, 'Carla', 'Asian American', 80);",
        "sql": "SELECT AVG(mental_health_score) FROM patients WHERE community IN ('African American', 'Latinx');"
      },
      {
        "sql_prompt": "What was the total funding amount for startups founded by veterans in Japan?",
        "sql_context": "CREATE TABLE company (id INT, name TEXT, country TEXT, founding_date DATE, founder_veteran BOOLEAN); INSERT INTO company (id, name, country, founding_date, founder_veteran) VALUES (1, 'Pi Corp', 'Japan', '2016-01-01', TRUE); INSERT INTO company (id, name, country, founding_date, founder_veteran) VALUES (2, 'Rho Inc', 'Japan', '2017-01-01', FALSE);",
        "sql": "SELECT SUM(funding_amount) FROM funding INNER JOIN company ON funding.company_id = company.id WHERE company.country = 'Japan' AND company.founder_veteran = TRUE;"
      },
      {
        "sql_prompt": "What is the total weight of all shipments from Brazil to India that were handled by 'DEF Logistics'?",
        "sql_context": "CREATE TABLE FreightForwarders (ID INT, Name VARCHAR(50), Country VARCHAR(50)); INSERT INTO FreightForwarders (ID, Name, Country) VALUES (1, 'ABC Logistics', 'USA'), (2, 'XYZ Shipping', 'Canada'), (3, 'DEF Logistics', 'India'); CREATE TABLE Shipments (ID INT, FreightForwarderID INT, Origin VARCHAR(50), Destination VARCHAR(50), Weight INT); INSERT INTO Shipments (ID, FreightForwarderID, Origin, Destination, Weight) VALUES (1, 1, 'Tokyo', 'New York', 100), (2, 2, 'Paris', 'London', 200), (3, 3, 'Brazil', 'India', 300);",
        "sql": "SELECT SUM(Shipments.Weight) FROM FreightForwarders INNER JOIN Shipments ON FreightForwarders.ID = Shipments.FreightForwarderID WHERE FreightForwarders.Name = 'DEF Logistics' AND Shipments.Origin = 'Brazil' AND Shipments.Destination = 'India';"
      },
      {
        "sql_prompt": "Identify the number of whale sightings in the Arctic Ocean by year.",
        "sql_context": "CREATE TABLE WhaleSightings (id INT, year INT, location VARCHAR(255)); INSERT INTO WhaleSightings (id, year, location) VALUES (1, 2020, 'Arctic Ocean'); INSERT INTO WhaleSightings (id, year, location) VALUES (2, 2019, 'Arctic Ocean');",
        "sql": "SELECT year, COUNT(*) FROM WhaleSightings WHERE location = 'Arctic Ocean' GROUP BY year;"
      },
      {
        "sql_prompt": "What was the maximum ticket sales for any event in Tokyo?",
        "sql_context": "CREATE TABLE EventData (id INT, city VARCHAR(50), ticket_sales INT); INSERT INTO EventData (id, city, ticket_sales) VALUES (1, 'Tokyo', 1200), (2, 'Tokyo', 1500), (3, 'Seoul', 1800), (4, 'Seoul', 1000), (5, 'Osaka', 1300);",
        "sql": "SELECT MAX(ticket_sales) FROM EventData WHERE city = 'Tokyo';"
      },
      {
        "sql_prompt": "What is the total number of workers in each department across all factories?",
        "sql_context": "CREATE TABLE factories (factory_id INT, department VARCHAR(255)); INSERT INTO factories VALUES (1, 'Assembly'), (1, 'Quality Control'), (2, 'Design'), (2, 'Testing'); CREATE TABLE workers (worker_id INT, factory_id INT, department VARCHAR(255), role VARCHAR(255)); INSERT INTO workers VALUES (1, 1, 'Assembly', 'Engineer'), (2, 1, 'Assembly', 'Technician'), (3, 1, 'Quality Control', 'Inspector'), (4, 2, 'Design', 'Architect'), (5, 2, 'Testing', 'Tester');",
        "sql": "SELECT f.department, COUNT(w.worker_id) as total_workers FROM factories f JOIN workers w ON f.factory_id = w.factory_id GROUP BY f.department;"
      },
      {
        "sql_prompt": "What is the total gold production by country in the last 3 years?",
        "sql_context": "CREATE TABLE yearly_gold_production (id INT, country VARCHAR(255), year INT, quantity INT); INSERT INTO yearly_gold_production (id, country, year, quantity) VALUES (1, 'Australia', 2019, 300), (2, 'China', 2019, 400), (3, 'Russia', 2019, 250), (4, 'Australia', 2020, 320), (5, 'China', 2020, 420), (6, 'Russia', 2020, 260), (7, 'Australia', 2021, 350), (8, 'China', 2021, 450), (9, 'Russia', 2021, 270);",
        "sql": "SELECT country, SUM(quantity) as total_gold_production FROM yearly_gold_production WHERE year BETWEEN 2019 AND 2021 GROUP BY country;"
      },
      {
        "sql_prompt": "What is the average age of patients who have been diagnosed with diabetes in the rural health clinic located in Texas?",
        "sql_context": "CREATE TABLE rural_clinic (clinic_id INT, location VARCHAR(20), capacity INT); INSERT INTO rural_clinic (clinic_id, location, capacity) VALUES (1, 'Texas', 50); CREATE TABLE patient (patient_id INT, clinic_id INT, age INT, diagnosis VARCHAR(20)); INSERT INTO patient (patient_id, clinic_id, age, diagnosis) VALUES (1, 1, 45, 'diabetes'), (2, 1, 60, 'asthma'), (3, 1, 30, 'diabetes');",
        "sql": "SELECT AVG(age) FROM patient WHERE diagnosis = 'diabetes' AND clinic_id = 1;"
      },
      {
        "sql_prompt": "List all cases where the client is from 'California' and the attorney is 'Smith'",
        "sql_context": "CREATE TABLE cases (case_id INT, client_state VARCHAR(2), attorney_name VARCHAR(20));",
        "sql": "SELECT * FROM cases WHERE client_state = 'CA' AND attorney_name = 'Smith';"
      },
      {
        "sql_prompt": "What is the total funding received by dance programs in California since 2017?",
        "sql_context": "CREATE TABLE Funding (id INT, program VARCHAR(50), location VARCHAR(50), date DATE, amount DECIMAL(10,2)); INSERT INTO Funding (id, program, location, date, amount) VALUES (1, 'Dance', 'California', '2017-01-01', 5000);",
        "sql": "SELECT SUM(amount) FROM Funding WHERE program = 'Dance' AND location = 'California' AND date >= '2017-01-01';"
      },
      {
        "sql_prompt": "Insert new records into the game_sessions table with the following data: (1, 1, 'Deathmatch', 1), (2, 2, 'Team Deathmatch', 2), (3, 3, 'Free for All', 3)",
        "sql_context": "CREATE TABLE game_sessions (session_id INT, player_id INT, game_mode VARCHAR(20), map_id INT);",
        "sql": "INSERT INTO game_sessions (session_id, player_id, game_mode, map_id) VALUES (1, 1, 'Deathmatch', 1), (2, 2, 'Team Deathmatch', 2), (3, 3, 'Free for All', 3);"
      },
      {
        "sql_prompt": "What are the names and launch dates of satellites deployed by SpaceTech Inc.?",
        "sql_context": "CREATE TABLE Satellites (satellite_id INT, name VARCHAR(50), launch_date DATE, manufacturer VARCHAR(50)); INSERT INTO Satellites (satellite_id, name, launch_date, manufacturer) VALUES (1, 'Sat1', '2020-01-01', 'SpaceTech Inc.');",
        "sql": "SELECT name, launch_date FROM Satellites WHERE manufacturer = 'SpaceTech Inc.';"
      },
      {
        "sql_prompt": "Which routes are wheelchair accessible in a given city?",
        "sql_context": "CREATE TABLE routes (id INT, name VARCHAR(255), type VARCHAR(255), city VARCHAR(255), length INT, wheelchair_accessible BOOLEAN); INSERT INTO routes (id, name, type, city, length, wheelchair_accessible) VALUES (1, '10', 'Bus', 'NYC', 25000, true), (2, '20', 'Train', 'NYC', 50000, true), (3, '30', 'Tram', 'Paris', 30000, false), (4, '40', 'Subway', 'London', 40000, true), (5, '50', 'Ferry', 'Sydney', 15000, true);",
        "sql": "SELECT r.name, r.city, CASE WHEN r.wheelchair_accessible THEN 'Yes' ELSE 'No' END as Accessible FROM routes r WHERE r.city = 'NYC';"
      }
    ],
    "signature_instructions": "Signature for Text to SQL generation task.",
    "signature_prefix": "Sql:",
    "extended_signature_instructions": "Signature for Text to SQL generation task.",
    "extended_signature_prefix": "Sql:"
  }
}